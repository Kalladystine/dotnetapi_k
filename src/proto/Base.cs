// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: base.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Openiap {

  /// <summary>Holder for reflection information generated from base.proto</summary>
  public static partial class BaseReflection {

    #region Descriptor
    /// <summary>File descriptor for base.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpiYXNlLnByb3RvEgdvcGVuaWFwGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvGhlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvGgxxdWVyeXMu",
            "cHJvdG8aDHF1ZXVlcy5wcm90bxoLd2F0Y2gucHJvdG8aD3dvcmtpdGVtcy5w",
            "cm90byKlAQoIRW52ZWxvcGUSDwoHY29tbWFuZBgBIAEoCRIQCghwcmlvcml0",
            "eRgCIAEoBRILCgNzZXEYAyABKAUSCgoCaWQYBCABKAkSCwoDcmlkGAUgASgJ",
            "EiIKBGRhdGEYBiABKAsyFC5nb29nbGUucHJvdG9idWYuQW55EgsKA2p3dBgH",
            "IAEoCRIPCgd0cmFjZWlkGAggASgJEg4KBnNwYW5pZBgJIAEoCSINCgtQaW5n",
            "UmVxdWVzdCIOCgxQaW5nUmVzcG9uc2UiPQoNRXJyb3JSZXNwb25zZRIPCgdt",
            "ZXNzYWdlGAEgASgJEgwKBGNvZGUYAiABKAUSDQoFc3RhY2sYAyABKAkiIgoR",
            "R2V0RWxlbWVudFJlcXVlc3QSDQoFeHBhdGgYASABKAkiIwoSR2V0RWxlbWVu",
            "dFJlc3BvbnNlEg0KBXhwYXRoGAEgASgJIi8KD0Rvd25sb2FkUmVxdWVzdBIK",
            "CgJpZBgBIAEoCRIQCghmaWxlbmFtZRgCIAEoCSJCChBEb3dubG9hZFJlc3Bv",
            "bnNlEgoKAmlkGAEgASgJEhAKCGZpbGVuYW1lGAIgASgJEhAKCG1pbWV0eXBl",
            "GAMgASgJIjMKDVVwbG9hZFJlcXVlc3QSEAoIZmlsZW5hbWUYASABKAkSEAoI",
            "bWltZXR5cGUYAiABKAkifAoOVXBsb2FkUmVzcG9uc2USCgoCaWQYASABKAkS",
            "EAoIZmlsZW5hbWUYAiABKAkSDQoFYnl0ZXMYAyABKAUSDgoGY2h1bmtzGAQg",
            "ASgFEgoKAm1iGAUgASgCEhMKC2VsYXBzZWRUaW1lGAYgASgFEgwKBG1icHMY",
            "ByABKAIiPAoLQmVnaW5TdHJlYW0SEAoIY2hlY2tzdW0YASABKAkSGwoEc3Rh",
            "dBgCIAEoCzINLm9wZW5pYXAuU3RhdCIWCgZTdHJlYW0SDAoEZGF0YRgBIAEo",
            "DCILCglFbmRTdHJlYW0ioQIKBFN0YXQSEwoLYmlydGh0aW1lTXMYASABKAIS",
            "DwoHYmxrc2l6ZRgCIAEoBRIOCgZibG9ja3MYAyABKAUSKQoFY3RpbWUYBCAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEg8KB2N0aW1lTXMYBSAB",
            "KAISCwoDZGV2GAYgASgFEgsKA2dpZBgHIAEoBRILCgNpbm8YCCABKAUSDAoE",
            "bW9kZRgJIAEoBRIpCgVtdGltZRgKIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXASDwoHbXRpbWVNcxgLIAEoAhINCgVubGluaxgMIAEoBRIMCgRy",
            "ZGV2GA0gASgFEgwKBHNpemUYDiABKAUSCwoDdWlkGA8gASgFIk8KFEN1c3Rv",
            "bUNvbW1hbmRSZXF1ZXN0Eg8KB2NvbW1hbmQYASABKAkSCgoCaWQYAiABKAkS",
            "DAoEbmFtZRgDIAEoCRIMCgRkYXRhGAQgASgJIicKFUN1c3RvbUNvbW1hbmRS",
            "ZXNwb25zZRIOCgZyZXN1bHQYASABKAkilwEKDVNpZ25pblJlcXVlc3QSEAoI",
            "dXNlcm5hbWUYASABKAkSEAoIcGFzc3dvcmQYAiABKAkSCwoDand0GAMgASgJ",
            "EgwKBHBpbmcYBCABKAgSFAoMdmFsaWRhdGVvbmx5GAUgASgIEg0KBWFnZW50",
            "GAYgASgJEg8KB3ZlcnNpb24YByABKAkSEQoJbG9uZ3Rva2VuGAggASgIIjoK",
            "DlNpZ25pblJlc3BvbnNlEgsKA2p3dBgBIAEoCRIbCgR1c2VyGAIgASgLMg0u",
            "b3BlbmlhcC5Vc2VyIkoKDFJlZnJlc2hUb2tlbhIQCgh1c2VybmFtZRgBIAEo",
            "CRILCgNqd3QYAiABKAkSGwoEdXNlchgDIAEoCzINLm9wZW5pYXAuVXNlciIh",
            "CgRSb2xlEgsKA19pZBgBIAEoCRIMCgRuYW1lGAIgASgJImAKBFVzZXISCwoD",
            "X2lkGAEgASgJEgwKBG5hbWUYAiABKAkSEAoIdXNlcm5hbWUYAyABKAkSDQoF",
            "ZW1haWwYBCABKAkSHAoFcm9sZXMYBSADKAsyDS5vcGVuaWFwLlJvbGUymxIK",
            "C0Zsb3dTZXJ2aWNlEjkKC1NldHVwU3RyZWFtEhEub3BlbmlhcC5FbnZlbG9w",
            "ZRoRLm9wZW5pYXAuRW52ZWxvcGUiACgBMAESOQoGU2lnbmluEhYub3Blbmlh",
            "cC5TaWduaW5SZXF1ZXN0Ghcub3BlbmlhcC5TaWduaW5SZXNwb25zZRI/CghE",
            "b3dubG9hZBIYLm9wZW5pYXAuRG93bmxvYWRSZXF1ZXN0Ghkub3BlbmlhcC5E",
            "b3dubG9hZFJlc3BvbnNlEjkKBlVwbG9hZBIWLm9wZW5pYXAuVXBsb2FkUmVx",
            "dWVzdBoXLm9wZW5pYXAuVXBsb2FkUmVzcG9uc2USTgoNQ3VzdG9tQ29tbWFu",
            "ZBIdLm9wZW5pYXAuQ3VzdG9tQ29tbWFuZFJlcXVlc3QaHi5vcGVuaWFwLkN1",
            "c3RvbUNvbW1hbmRSZXNwb25zZRJUCg9MaXN0Q29sbGVjdGlvbnMSHy5vcGVu",
            "aWFwLkxpc3RDb2xsZWN0aW9uc1JlcXVlc3QaIC5vcGVuaWFwLkxpc3RDb2xs",
            "ZWN0aW9uc1Jlc3BvbnNlElEKDkRyb3BDb2xsZWN0aW9uEh4ub3BlbmlhcC5E",
            "cm9wQ29sbGVjdGlvblJlcXVlc3QaHy5vcGVuaWFwLkRyb3BDb2xsZWN0aW9u",
            "UmVzcG9uc2USNgoFUXVlcnkSFS5vcGVuaWFwLlF1ZXJ5UmVxdWVzdBoWLm9w",
            "ZW5pYXAuUXVlcnlSZXNwb25zZRJdChJHZXREb2N1bWVudFZlcnNpb24SIi5v",
            "cGVuaWFwLkdldERvY3VtZW50VmVyc2lvblJlcXVlc3QaIy5vcGVuaWFwLkdl",
            "dERvY3VtZW50VmVyc2lvblJlc3BvbnNlEkIKCUFnZ3JlZ2F0ZRIZLm9wZW5p",
            "YXAuQWdncmVnYXRlUmVxdWVzdBoaLm9wZW5pYXAuQWdncmVnYXRlUmVzcG9u",
            "c2USNgoFQ291bnQSFS5vcGVuaWFwLkNvdW50UmVxdWVzdBoWLm9wZW5pYXAu",
            "Q291bnRSZXNwb25zZRJCCglJbnNlcnRPbmUSGS5vcGVuaWFwLkluc2VydE9u",
            "ZVJlcXVlc3QaGi5vcGVuaWFwLkluc2VydE9uZVJlc3BvbnNlEkUKCkluc2Vy",
            "dE1hbnkSGi5vcGVuaWFwLkluc2VydE1hbnlSZXF1ZXN0Ghsub3BlbmlhcC5J",
            "bnNlcnRNYW55UmVzcG9uc2USQgoJVXBkYXRlT25lEhkub3BlbmlhcC5VcGRh",
            "dGVPbmVSZXF1ZXN0Ghoub3BlbmlhcC5VcGRhdGVPbmVSZXNwb25zZRJRCg5V",
            "cGRhdGVEb2N1bWVudBIeLm9wZW5pYXAuVXBkYXRlRG9jdW1lbnRSZXF1ZXN0",
            "Gh8ub3BlbmlhcC5VcGRhdGVEb2N1bWVudFJlc3BvbnNlEloKEUluc2VydE9y",
            "VXBkYXRlT25lEiEub3BlbmlhcC5JbnNlcnRPclVwZGF0ZU9uZVJlcXVlc3Qa",
            "Ii5vcGVuaWFwLkluc2VydE9yVXBkYXRlT25lUmVzcG9uc2USXQoSSW5zZXJ0",
            "T3JVcGRhdGVNYW55EiIub3BlbmlhcC5JbnNlcnRPclVwZGF0ZU1hbnlSZXF1",
            "ZXN0GiMub3BlbmlhcC5JbnNlcnRPclVwZGF0ZU1hbnlSZXNwb25zZRJCCglE",
            "ZWxldGVPbmUSGS5vcGVuaWFwLkRlbGV0ZU9uZVJlcXVlc3QaGi5vcGVuaWFw",
            "LkRlbGV0ZU9uZVJlc3BvbnNlEkUKCkRlbGV0ZU1hbnkSGi5vcGVuaWFwLkRl",
            "bGV0ZU1hbnlSZXF1ZXN0Ghsub3BlbmlhcC5EZWxldGVNYW55UmVzcG9uc2US",
            "TgoNUmVnaXN0ZXJRdWV1ZRIdLm9wZW5pYXAuUmVnaXN0ZXJRdWV1ZVJlcXVl",
            "c3QaHi5vcGVuaWFwLlJlZ2lzdGVyUXVldWVSZXNwb25zZRJXChBSZWdpc3Rl",
            "ckV4Y2hhbmdlEiAub3BlbmlhcC5SZWdpc3RlckV4Y2hhbmdlUmVxdWVzdBoh",
            "Lm9wZW5pYXAuUmVnaXN0ZXJFeGNoYW5nZVJlc3BvbnNlEksKDFF1ZXVlTWVz",
            "c2FnZRIcLm9wZW5pYXAuUXVldWVNZXNzYWdlUmVxdWVzdBodLm9wZW5pYXAu",
            "UXVldWVNZXNzYWdlUmVzcG9uc2USVAoPVW5SZWdpc3RlclF1ZXVlEh8ub3Bl",
            "bmlhcC5VblJlZ2lzdGVyUXVldWVSZXF1ZXN0GiAub3BlbmlhcC5VblJlZ2lz",
            "dGVyUXVldWVSZXNwb25zZRI2CgVXYXRjaBIVLm9wZW5pYXAuV2F0Y2hSZXF1",
            "ZXN0GhYub3BlbmlhcC5XYXRjaFJlc3BvbnNlEjwKB1VuV2F0Y2gSFy5vcGVu",
            "aWFwLlVuV2F0Y2hSZXF1ZXN0Ghgub3BlbmlhcC5VbldhdGNoUmVzcG9uc2US",
            "SwoMUHVzaFdvcmtpdGVtEhwub3BlbmlhcC5QdXNoV29ya2l0ZW1SZXF1ZXN0",
            "Gh0ub3BlbmlhcC5QdXNoV29ya2l0ZW1SZXNwb25zZRJOCg1QdXNoV29ya2l0",
            "ZW1zEh0ub3BlbmlhcC5QdXNoV29ya2l0ZW1zUmVxdWVzdBoeLm9wZW5pYXAu",
            "UHVzaFdvcmtpdGVtc1Jlc3BvbnNlElEKDlVwZGF0ZVdvcmtpdGVtEh4ub3Bl",
            "bmlhcC5VcGRhdGVXb3JraXRlbVJlcXVlc3QaHy5vcGVuaWFwLlVwZGF0ZVdv",
            "cmtpdGVtUmVzcG9uc2USSAoLUG9wV29ya2l0ZW0SGy5vcGVuaWFwLlBvcFdv",
            "cmtpdGVtUmVxdWVzdBocLm9wZW5pYXAuUG9wV29ya2l0ZW1SZXNwb25zZRJR",
            "Cg5EZWxldGVXb3JraXRlbRIeLm9wZW5pYXAuRGVsZXRlV29ya2l0ZW1SZXF1",
            "ZXN0Gh8ub3BlbmlhcC5EZWxldGVXb3JraXRlbVJlc3BvbnNlElcKEEFkZFdv",
            "cmtJdGVtUXVldWUSIC5vcGVuaWFwLkFkZFdvcmtJdGVtUXVldWVSZXF1ZXN0",
            "GiEub3BlbmlhcC5BZGRXb3JrSXRlbVF1ZXVlUmVzcG9uc2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Openiap.QuerysReflection.Descriptor, global::Openiap.QueuesReflection.Descriptor, global::Openiap.WatchReflection.Descriptor, global::Openiap.WorkitemsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.Envelope), global::Openiap.Envelope.Parser, new[]{ "Command", "Priority", "Seq", "Id", "Rid", "Data", "Jwt", "Traceid", "Spanid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.PingRequest), global::Openiap.PingRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.PingResponse), global::Openiap.PingResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.ErrorResponse), global::Openiap.ErrorResponse.Parser, new[]{ "Message", "Code", "Stack" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.GetElementRequest), global::Openiap.GetElementRequest.Parser, new[]{ "Xpath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.GetElementResponse), global::Openiap.GetElementResponse.Parser, new[]{ "Xpath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DownloadRequest), global::Openiap.DownloadRequest.Parser, new[]{ "Id", "Filename" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DownloadResponse), global::Openiap.DownloadResponse.Parser, new[]{ "Id", "Filename", "Mimetype" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UploadRequest), global::Openiap.UploadRequest.Parser, new[]{ "Filename", "Mimetype" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UploadResponse), global::Openiap.UploadResponse.Parser, new[]{ "Id", "Filename", "Bytes", "Chunks", "Mb", "ElapsedTime", "Mbps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.BeginStream), global::Openiap.BeginStream.Parser, new[]{ "Checksum", "Stat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.Stream), global::Openiap.Stream.Parser, new[]{ "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.EndStream), global::Openiap.EndStream.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.Stat), global::Openiap.Stat.Parser, new[]{ "BirthtimeMs", "Blksize", "Blocks", "Ctime", "CtimeMs", "Dev", "Gid", "Ino", "Mode", "Mtime", "MtimeMs", "Nlink", "Rdev", "Size", "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.CustomCommandRequest), global::Openiap.CustomCommandRequest.Parser, new[]{ "Command", "Id", "Name", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.CustomCommandResponse), global::Openiap.CustomCommandResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.SigninRequest), global::Openiap.SigninRequest.Parser, new[]{ "Username", "Password", "Jwt", "Ping", "Validateonly", "Agent", "Version", "Longtoken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.SigninResponse), global::Openiap.SigninResponse.Parser, new[]{ "Jwt", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.RefreshToken), global::Openiap.RefreshToken.Parser, new[]{ "Username", "Jwt", "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.Role), global::Openiap.Role.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.User), global::Openiap.User.Parser, new[]{ "Id", "Name", "Username", "Email", "Roles" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Envelope : pb::IMessage<Envelope> {
    private static readonly pb::MessageParser<Envelope> _parser = new pb::MessageParser<Envelope>(() => new Envelope());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Envelope> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope(Envelope other) : this() {
      command_ = other.command_;
      priority_ = other.priority_;
      seq_ = other.seq_;
      id_ = other.id_;
      rid_ = other.rid_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      jwt_ = other.jwt_;
      traceid_ = other.traceid_;
      spanid_ = other.spanid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Envelope Clone() {
      return new Envelope(this);
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 1;
    private string command_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Command {
      get { return command_; }
      set {
        command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 2;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "seq" field.</summary>
    public const int SeqFieldNumber = 3;
    private int seq_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Seq {
      get { return seq_; }
      set {
        seq_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rid" field.</summary>
    public const int RidFieldNumber = 5;
    private string rid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rid {
      get { return rid_; }
      set {
        rid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Any data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "jwt" field.</summary>
    public const int JwtFieldNumber = 7;
    private string jwt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Jwt {
      get { return jwt_; }
      set {
        jwt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "traceid" field.</summary>
    public const int TraceidFieldNumber = 8;
    private string traceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Traceid {
      get { return traceid_; }
      set {
        traceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "spanid" field.</summary>
    public const int SpanidFieldNumber = 9;
    private string spanid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Spanid {
      get { return spanid_; }
      set {
        spanid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Envelope);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Envelope other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Command != other.Command) return false;
      if (Priority != other.Priority) return false;
      if (Seq != other.Seq) return false;
      if (Id != other.Id) return false;
      if (Rid != other.Rid) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (Jwt != other.Jwt) return false;
      if (Traceid != other.Traceid) return false;
      if (Spanid != other.Spanid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Command.Length != 0) hash ^= Command.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (Seq != 0) hash ^= Seq.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Rid.Length != 0) hash ^= Rid.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (Jwt.Length != 0) hash ^= Jwt.GetHashCode();
      if (Traceid.Length != 0) hash ^= Traceid.GetHashCode();
      if (Spanid.Length != 0) hash ^= Spanid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Command.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Command);
      }
      if (Priority != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Priority);
      }
      if (Seq != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Seq);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Id);
      }
      if (Rid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Rid);
      }
      if (data_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Data);
      }
      if (Jwt.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Jwt);
      }
      if (Traceid.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Traceid);
      }
      if (Spanid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Spanid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Command.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Priority);
      }
      if (Seq != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seq);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Rid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rid);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (Jwt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Jwt);
      }
      if (Traceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Traceid);
      }
      if (Spanid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Spanid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Envelope other) {
      if (other == null) {
        return;
      }
      if (other.Command.Length != 0) {
        Command = other.Command;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.Seq != 0) {
        Seq = other.Seq;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Rid.Length != 0) {
        Rid = other.Rid;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.Jwt.Length != 0) {
        Jwt = other.Jwt;
      }
      if (other.Traceid.Length != 0) {
        Traceid = other.Traceid;
      }
      if (other.Spanid.Length != 0) {
        Spanid = other.Spanid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Command = input.ReadString();
            break;
          }
          case 16: {
            Priority = input.ReadInt32();
            break;
          }
          case 24: {
            Seq = input.ReadInt32();
            break;
          }
          case 34: {
            Id = input.ReadString();
            break;
          }
          case 42: {
            Rid = input.ReadString();
            break;
          }
          case 50: {
            if (data_ == null) {
              Data = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Data);
            break;
          }
          case 58: {
            Jwt = input.ReadString();
            break;
          }
          case 66: {
            Traceid = input.ReadString();
            break;
          }
          case 74: {
            Spanid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PingRequest : pb::IMessage<PingRequest> {
    private static readonly pb::MessageParser<PingRequest> _parser = new pb::MessageParser<PingRequest>(() => new PingRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest(PingRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingRequest Clone() {
      return new PingRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PingResponse : pb::IMessage<PingResponse> {
    private static readonly pb::MessageParser<PingResponse> _parser = new pb::MessageParser<PingResponse>(() => new PingResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PingResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse(PingResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PingResponse Clone() {
      return new PingResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PingResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PingResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PingResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ErrorResponse : pb::IMessage<ErrorResponse> {
    private static readonly pb::MessageParser<ErrorResponse> _parser = new pb::MessageParser<ErrorResponse>(() => new ErrorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ErrorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse(ErrorResponse other) : this() {
      message_ = other.message_;
      code_ = other.code_;
      stack_ = other.stack_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ErrorResponse Clone() {
      return new ErrorResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 2;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "stack" field.</summary>
    public const int StackFieldNumber = 3;
    private string stack_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Stack {
      get { return stack_; }
      set {
        stack_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ErrorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ErrorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      if (Code != other.Code) return false;
      if (Stack != other.Stack) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Stack.Length != 0) hash ^= Stack.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (Code != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Code);
      }
      if (Stack.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Stack);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Stack.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Stack);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ErrorResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Stack.Length != 0) {
        Stack = other.Stack;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
          case 16: {
            Code = input.ReadInt32();
            break;
          }
          case 26: {
            Stack = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetElementRequest : pb::IMessage<GetElementRequest> {
    private static readonly pb::MessageParser<GetElementRequest> _parser = new pb::MessageParser<GetElementRequest>(() => new GetElementRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetElementRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElementRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElementRequest(GetElementRequest other) : this() {
      xpath_ = other.xpath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElementRequest Clone() {
      return new GetElementRequest(this);
    }

    /// <summary>Field number for the "xpath" field.</summary>
    public const int XpathFieldNumber = 1;
    private string xpath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Xpath {
      get { return xpath_; }
      set {
        xpath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetElementRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetElementRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Xpath != other.Xpath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Xpath.Length != 0) hash ^= Xpath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Xpath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Xpath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Xpath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Xpath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetElementRequest other) {
      if (other == null) {
        return;
      }
      if (other.Xpath.Length != 0) {
        Xpath = other.Xpath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Xpath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetElementResponse : pb::IMessage<GetElementResponse> {
    private static readonly pb::MessageParser<GetElementResponse> _parser = new pb::MessageParser<GetElementResponse>(() => new GetElementResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetElementResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElementResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElementResponse(GetElementResponse other) : this() {
      xpath_ = other.xpath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetElementResponse Clone() {
      return new GetElementResponse(this);
    }

    /// <summary>Field number for the "xpath" field.</summary>
    public const int XpathFieldNumber = 1;
    private string xpath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Xpath {
      get { return xpath_; }
      set {
        xpath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetElementResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetElementResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Xpath != other.Xpath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Xpath.Length != 0) hash ^= Xpath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Xpath.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Xpath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Xpath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Xpath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetElementResponse other) {
      if (other == null) {
        return;
      }
      if (other.Xpath.Length != 0) {
        Xpath = other.Xpath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Xpath = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadRequest : pb::IMessage<DownloadRequest> {
    private static readonly pb::MessageParser<DownloadRequest> _parser = new pb::MessageParser<DownloadRequest>(() => new DownloadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRequest(DownloadRequest other) : this() {
      id_ = other.id_;
      filename_ = other.filename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadRequest Clone() {
      return new DownloadRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 2;
    private string filename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filename {
      get { return filename_; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Filename != other.Filename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Filename.Length != 0) hash ^= Filename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Filename.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Filename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Filename.Length != 0) {
        Filename = other.Filename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Filename = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DownloadResponse : pb::IMessage<DownloadResponse> {
    private static readonly pb::MessageParser<DownloadResponse> _parser = new pb::MessageParser<DownloadResponse>(() => new DownloadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DownloadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadResponse(DownloadResponse other) : this() {
      id_ = other.id_;
      filename_ = other.filename_;
      mimetype_ = other.mimetype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DownloadResponse Clone() {
      return new DownloadResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 2;
    private string filename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filename {
      get { return filename_; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 3;
    private string mimetype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DownloadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DownloadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Filename != other.Filename) return false;
      if (Mimetype != other.Mimetype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Filename.Length != 0) hash ^= Filename.GetHashCode();
      if (Mimetype.Length != 0) hash ^= Mimetype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Filename.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filename);
      }
      if (Mimetype.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Mimetype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Filename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (Mimetype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DownloadResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Filename.Length != 0) {
        Filename = other.Filename;
      }
      if (other.Mimetype.Length != 0) {
        Mimetype = other.Mimetype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Filename = input.ReadString();
            break;
          }
          case 26: {
            Mimetype = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadRequest : pb::IMessage<UploadRequest> {
    private static readonly pb::MessageParser<UploadRequest> _parser = new pb::MessageParser<UploadRequest>(() => new UploadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadRequest(UploadRequest other) : this() {
      filename_ = other.filename_;
      mimetype_ = other.mimetype_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadRequest Clone() {
      return new UploadRequest(this);
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 1;
    private string filename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filename {
      get { return filename_; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mimetype" field.</summary>
    public const int MimetypeFieldNumber = 2;
    private string mimetype_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Mimetype {
      get { return mimetype_; }
      set {
        mimetype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Filename != other.Filename) return false;
      if (Mimetype != other.Mimetype) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Filename.Length != 0) hash ^= Filename.GetHashCode();
      if (Mimetype.Length != 0) hash ^= Mimetype.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Filename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Filename);
      }
      if (Mimetype.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Mimetype);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Filename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (Mimetype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mimetype);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadRequest other) {
      if (other == null) {
        return;
      }
      if (other.Filename.Length != 0) {
        Filename = other.Filename;
      }
      if (other.Mimetype.Length != 0) {
        Mimetype = other.Mimetype;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Filename = input.ReadString();
            break;
          }
          case 18: {
            Mimetype = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadResponse : pb::IMessage<UploadResponse> {
    private static readonly pb::MessageParser<UploadResponse> _parser = new pb::MessageParser<UploadResponse>(() => new UploadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadResponse(UploadResponse other) : this() {
      id_ = other.id_;
      filename_ = other.filename_;
      bytes_ = other.bytes_;
      chunks_ = other.chunks_;
      mb_ = other.mb_;
      elapsedTime_ = other.elapsedTime_;
      mbps_ = other.mbps_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadResponse Clone() {
      return new UploadResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 2;
    private string filename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filename {
      get { return filename_; }
      set {
        filename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 3;
    private int bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    /// <summary>Field number for the "chunks" field.</summary>
    public const int ChunksFieldNumber = 4;
    private int chunks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Chunks {
      get { return chunks_; }
      set {
        chunks_ = value;
      }
    }

    /// <summary>Field number for the "mb" field.</summary>
    public const int MbFieldNumber = 5;
    private float mb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Mb {
      get { return mb_; }
      set {
        mb_ = value;
      }
    }

    /// <summary>Field number for the "elapsedTime" field.</summary>
    public const int ElapsedTimeFieldNumber = 6;
    private int elapsedTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ElapsedTime {
      get { return elapsedTime_; }
      set {
        elapsedTime_ = value;
      }
    }

    /// <summary>Field number for the "mbps" field.</summary>
    public const int MbpsFieldNumber = 7;
    private float mbps_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Mbps {
      get { return mbps_; }
      set {
        mbps_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Filename != other.Filename) return false;
      if (Bytes != other.Bytes) return false;
      if (Chunks != other.Chunks) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Mb, other.Mb)) return false;
      if (ElapsedTime != other.ElapsedTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Mbps, other.Mbps)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Filename.Length != 0) hash ^= Filename.GetHashCode();
      if (Bytes != 0) hash ^= Bytes.GetHashCode();
      if (Chunks != 0) hash ^= Chunks.GetHashCode();
      if (Mb != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Mb);
      if (ElapsedTime != 0) hash ^= ElapsedTime.GetHashCode();
      if (Mbps != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Mbps);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Filename.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Filename);
      }
      if (Bytes != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Bytes);
      }
      if (Chunks != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Chunks);
      }
      if (Mb != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Mb);
      }
      if (ElapsedTime != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(ElapsedTime);
      }
      if (Mbps != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Mbps);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Filename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filename);
      }
      if (Bytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bytes);
      }
      if (Chunks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Chunks);
      }
      if (Mb != 0F) {
        size += 1 + 4;
      }
      if (ElapsedTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElapsedTime);
      }
      if (Mbps != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Filename.Length != 0) {
        Filename = other.Filename;
      }
      if (other.Bytes != 0) {
        Bytes = other.Bytes;
      }
      if (other.Chunks != 0) {
        Chunks = other.Chunks;
      }
      if (other.Mb != 0F) {
        Mb = other.Mb;
      }
      if (other.ElapsedTime != 0) {
        ElapsedTime = other.ElapsedTime;
      }
      if (other.Mbps != 0F) {
        Mbps = other.Mbps;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Filename = input.ReadString();
            break;
          }
          case 24: {
            Bytes = input.ReadInt32();
            break;
          }
          case 32: {
            Chunks = input.ReadInt32();
            break;
          }
          case 45: {
            Mb = input.ReadFloat();
            break;
          }
          case 48: {
            ElapsedTime = input.ReadInt32();
            break;
          }
          case 61: {
            Mbps = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BeginStream : pb::IMessage<BeginStream> {
    private static readonly pb::MessageParser<BeginStream> _parser = new pb::MessageParser<BeginStream>(() => new BeginStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BeginStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginStream(BeginStream other) : this() {
      checksum_ = other.checksum_;
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BeginStream Clone() {
      return new BeginStream(this);
    }

    /// <summary>Field number for the "checksum" field.</summary>
    public const int ChecksumFieldNumber = 1;
    private string checksum_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Checksum {
      get { return checksum_; }
      set {
        checksum_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 2;
    private global::Openiap.Stat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Openiap.Stat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BeginStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BeginStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Checksum != other.Checksum) return false;
      if (!object.Equals(Stat, other.Stat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Checksum.Length != 0) hash ^= Checksum.GetHashCode();
      if (stat_ != null) hash ^= Stat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Checksum.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Checksum);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Checksum.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Checksum);
      }
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BeginStream other) {
      if (other == null) {
        return;
      }
      if (other.Checksum.Length != 0) {
        Checksum = other.Checksum;
      }
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Openiap.Stat();
        }
        Stat.MergeFrom(other.Stat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Checksum = input.ReadString();
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Openiap.Stat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Stream : pb::IMessage<Stream> {
    private static readonly pb::MessageParser<Stream> _parser = new pb::MessageParser<Stream>(() => new Stream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream(Stream other) : this() {
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stream Clone() {
      return new Stream(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stream other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EndStream : pb::IMessage<EndStream> {
    private static readonly pb::MessageParser<EndStream> _parser = new pb::MessageParser<EndStream>(() => new EndStream());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EndStream> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndStream() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndStream(EndStream other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EndStream Clone() {
      return new EndStream(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EndStream);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EndStream other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EndStream other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Stat : pb::IMessage<Stat> {
    private static readonly pb::MessageParser<Stat> _parser = new pb::MessageParser<Stat>(() => new Stat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat(Stat other) : this() {
      birthtimeMs_ = other.birthtimeMs_;
      blksize_ = other.blksize_;
      blocks_ = other.blocks_;
      ctime_ = other.ctime_ != null ? other.ctime_.Clone() : null;
      ctimeMs_ = other.ctimeMs_;
      dev_ = other.dev_;
      gid_ = other.gid_;
      ino_ = other.ino_;
      mode_ = other.mode_;
      mtime_ = other.mtime_ != null ? other.mtime_.Clone() : null;
      mtimeMs_ = other.mtimeMs_;
      nlink_ = other.nlink_;
      rdev_ = other.rdev_;
      size_ = other.size_;
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stat Clone() {
      return new Stat(this);
    }

    /// <summary>Field number for the "birthtimeMs" field.</summary>
    public const int BirthtimeMsFieldNumber = 1;
    private float birthtimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float BirthtimeMs {
      get { return birthtimeMs_; }
      set {
        birthtimeMs_ = value;
      }
    }

    /// <summary>Field number for the "blksize" field.</summary>
    public const int BlksizeFieldNumber = 2;
    private int blksize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Blksize {
      get { return blksize_; }
      set {
        blksize_ = value;
      }
    }

    /// <summary>Field number for the "blocks" field.</summary>
    public const int BlocksFieldNumber = 3;
    private int blocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Blocks {
      get { return blocks_; }
      set {
        blocks_ = value;
      }
    }

    /// <summary>Field number for the "ctime" field.</summary>
    public const int CtimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp ctime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Ctime {
      get { return ctime_; }
      set {
        ctime_ = value;
      }
    }

    /// <summary>Field number for the "ctimeMs" field.</summary>
    public const int CtimeMsFieldNumber = 5;
    private float ctimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float CtimeMs {
      get { return ctimeMs_; }
      set {
        ctimeMs_ = value;
      }
    }

    /// <summary>Field number for the "dev" field.</summary>
    public const int DevFieldNumber = 6;
    private int dev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Dev {
      get { return dev_; }
      set {
        dev_ = value;
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 7;
    private int gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "ino" field.</summary>
    public const int InoFieldNumber = 8;
    private int ino_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Ino {
      get { return ino_; }
      set {
        ino_ = value;
      }
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 9;
    private int mode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "mtime" field.</summary>
    public const int MtimeFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp mtime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Mtime {
      get { return mtime_; }
      set {
        mtime_ = value;
      }
    }

    /// <summary>Field number for the "mtimeMs" field.</summary>
    public const int MtimeMsFieldNumber = 11;
    private float mtimeMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float MtimeMs {
      get { return mtimeMs_; }
      set {
        mtimeMs_ = value;
      }
    }

    /// <summary>Field number for the "nlink" field.</summary>
    public const int NlinkFieldNumber = 12;
    private int nlink_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nlink {
      get { return nlink_; }
      set {
        nlink_ = value;
      }
    }

    /// <summary>Field number for the "rdev" field.</summary>
    public const int RdevFieldNumber = 13;
    private int rdev_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Rdev {
      get { return rdev_; }
      set {
        rdev_ = value;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 14;
    private int size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 15;
    private int uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(BirthtimeMs, other.BirthtimeMs)) return false;
      if (Blksize != other.Blksize) return false;
      if (Blocks != other.Blocks) return false;
      if (!object.Equals(Ctime, other.Ctime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CtimeMs, other.CtimeMs)) return false;
      if (Dev != other.Dev) return false;
      if (Gid != other.Gid) return false;
      if (Ino != other.Ino) return false;
      if (Mode != other.Mode) return false;
      if (!object.Equals(Mtime, other.Mtime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MtimeMs, other.MtimeMs)) return false;
      if (Nlink != other.Nlink) return false;
      if (Rdev != other.Rdev) return false;
      if (Size != other.Size) return false;
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BirthtimeMs != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(BirthtimeMs);
      if (Blksize != 0) hash ^= Blksize.GetHashCode();
      if (Blocks != 0) hash ^= Blocks.GetHashCode();
      if (ctime_ != null) hash ^= Ctime.GetHashCode();
      if (CtimeMs != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CtimeMs);
      if (Dev != 0) hash ^= Dev.GetHashCode();
      if (Gid != 0) hash ^= Gid.GetHashCode();
      if (Ino != 0) hash ^= Ino.GetHashCode();
      if (Mode != 0) hash ^= Mode.GetHashCode();
      if (mtime_ != null) hash ^= Mtime.GetHashCode();
      if (MtimeMs != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MtimeMs);
      if (Nlink != 0) hash ^= Nlink.GetHashCode();
      if (Rdev != 0) hash ^= Rdev.GetHashCode();
      if (Size != 0) hash ^= Size.GetHashCode();
      if (Uid != 0) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BirthtimeMs != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(BirthtimeMs);
      }
      if (Blksize != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Blksize);
      }
      if (Blocks != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Blocks);
      }
      if (ctime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Ctime);
      }
      if (CtimeMs != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CtimeMs);
      }
      if (Dev != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Dev);
      }
      if (Gid != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Gid);
      }
      if (Ino != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Ino);
      }
      if (Mode != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(Mode);
      }
      if (mtime_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Mtime);
      }
      if (MtimeMs != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(MtimeMs);
      }
      if (Nlink != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(Nlink);
      }
      if (Rdev != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Rdev);
      }
      if (Size != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Size);
      }
      if (Uid != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BirthtimeMs != 0F) {
        size += 1 + 4;
      }
      if (Blksize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blksize);
      }
      if (Blocks != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Blocks);
      }
      if (ctime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ctime);
      }
      if (CtimeMs != 0F) {
        size += 1 + 4;
      }
      if (Dev != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Dev);
      }
      if (Gid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Gid);
      }
      if (Ino != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ino);
      }
      if (Mode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Mode);
      }
      if (mtime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mtime);
      }
      if (MtimeMs != 0F) {
        size += 1 + 4;
      }
      if (Nlink != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Nlink);
      }
      if (Rdev != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rdev);
      }
      if (Size != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Size);
      }
      if (Uid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stat other) {
      if (other == null) {
        return;
      }
      if (other.BirthtimeMs != 0F) {
        BirthtimeMs = other.BirthtimeMs;
      }
      if (other.Blksize != 0) {
        Blksize = other.Blksize;
      }
      if (other.Blocks != 0) {
        Blocks = other.Blocks;
      }
      if (other.ctime_ != null) {
        if (ctime_ == null) {
          Ctime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Ctime.MergeFrom(other.Ctime);
      }
      if (other.CtimeMs != 0F) {
        CtimeMs = other.CtimeMs;
      }
      if (other.Dev != 0) {
        Dev = other.Dev;
      }
      if (other.Gid != 0) {
        Gid = other.Gid;
      }
      if (other.Ino != 0) {
        Ino = other.Ino;
      }
      if (other.Mode != 0) {
        Mode = other.Mode;
      }
      if (other.mtime_ != null) {
        if (mtime_ == null) {
          Mtime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Mtime.MergeFrom(other.Mtime);
      }
      if (other.MtimeMs != 0F) {
        MtimeMs = other.MtimeMs;
      }
      if (other.Nlink != 0) {
        Nlink = other.Nlink;
      }
      if (other.Rdev != 0) {
        Rdev = other.Rdev;
      }
      if (other.Size != 0) {
        Size = other.Size;
      }
      if (other.Uid != 0) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            BirthtimeMs = input.ReadFloat();
            break;
          }
          case 16: {
            Blksize = input.ReadInt32();
            break;
          }
          case 24: {
            Blocks = input.ReadInt32();
            break;
          }
          case 34: {
            if (ctime_ == null) {
              Ctime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Ctime);
            break;
          }
          case 45: {
            CtimeMs = input.ReadFloat();
            break;
          }
          case 48: {
            Dev = input.ReadInt32();
            break;
          }
          case 56: {
            Gid = input.ReadInt32();
            break;
          }
          case 64: {
            Ino = input.ReadInt32();
            break;
          }
          case 72: {
            Mode = input.ReadInt32();
            break;
          }
          case 82: {
            if (mtime_ == null) {
              Mtime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Mtime);
            break;
          }
          case 93: {
            MtimeMs = input.ReadFloat();
            break;
          }
          case 96: {
            Nlink = input.ReadInt32();
            break;
          }
          case 104: {
            Rdev = input.ReadInt32();
            break;
          }
          case 112: {
            Size = input.ReadInt32();
            break;
          }
          case 120: {
            Uid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomCommandRequest : pb::IMessage<CustomCommandRequest> {
    private static readonly pb::MessageParser<CustomCommandRequest> _parser = new pb::MessageParser<CustomCommandRequest>(() => new CustomCommandRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomCommandRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommandRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommandRequest(CustomCommandRequest other) : this() {
      command_ = other.command_;
      id_ = other.id_;
      name_ = other.name_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommandRequest Clone() {
      return new CustomCommandRequest(this);
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 1;
    private string command_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Command {
      get { return command_; }
      set {
        command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomCommandRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomCommandRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Command != other.Command) return false;
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Command.Length != 0) hash ^= Command.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Command.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Command);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Command.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomCommandRequest other) {
      if (other == null) {
        return;
      }
      if (other.Command.Length != 0) {
        Command = other.Command;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Command = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomCommandResponse : pb::IMessage<CustomCommandResponse> {
    private static readonly pb::MessageParser<CustomCommandResponse> _parser = new pb::MessageParser<CustomCommandResponse>(() => new CustomCommandResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomCommandResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommandResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommandResponse(CustomCommandResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomCommandResponse Clone() {
      return new CustomCommandResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomCommandResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomCommandResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomCommandResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SigninRequest : pb::IMessage<SigninRequest> {
    private static readonly pb::MessageParser<SigninRequest> _parser = new pb::MessageParser<SigninRequest>(() => new SigninRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SigninRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SigninRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SigninRequest(SigninRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      jwt_ = other.jwt_;
      ping_ = other.ping_;
      validateonly_ = other.validateonly_;
      agent_ = other.agent_;
      version_ = other.version_;
      longtoken_ = other.longtoken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SigninRequest Clone() {
      return new SigninRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jwt" field.</summary>
    public const int JwtFieldNumber = 3;
    private string jwt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Jwt {
      get { return jwt_; }
      set {
        jwt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 4;
    private bool ping_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ping {
      get { return ping_; }
      set {
        ping_ = value;
      }
    }

    /// <summary>Field number for the "validateonly" field.</summary>
    public const int ValidateonlyFieldNumber = 5;
    private bool validateonly_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Validateonly {
      get { return validateonly_; }
      set {
        validateonly_ = value;
      }
    }

    /// <summary>Field number for the "agent" field.</summary>
    public const int AgentFieldNumber = 6;
    private string agent_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Agent {
      get { return agent_; }
      set {
        agent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 7;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "longtoken" field.</summary>
    public const int LongtokenFieldNumber = 8;
    private bool longtoken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Longtoken {
      get { return longtoken_; }
      set {
        longtoken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SigninRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SigninRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (Jwt != other.Jwt) return false;
      if (Ping != other.Ping) return false;
      if (Validateonly != other.Validateonly) return false;
      if (Agent != other.Agent) return false;
      if (Version != other.Version) return false;
      if (Longtoken != other.Longtoken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Jwt.Length != 0) hash ^= Jwt.GetHashCode();
      if (Ping != false) hash ^= Ping.GetHashCode();
      if (Validateonly != false) hash ^= Validateonly.GetHashCode();
      if (Agent.Length != 0) hash ^= Agent.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Longtoken != false) hash ^= Longtoken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (Jwt.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Jwt);
      }
      if (Ping != false) {
        output.WriteRawTag(32);
        output.WriteBool(Ping);
      }
      if (Validateonly != false) {
        output.WriteRawTag(40);
        output.WriteBool(Validateonly);
      }
      if (Agent.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Agent);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Version);
      }
      if (Longtoken != false) {
        output.WriteRawTag(64);
        output.WriteBool(Longtoken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Jwt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Jwt);
      }
      if (Ping != false) {
        size += 1 + 1;
      }
      if (Validateonly != false) {
        size += 1 + 1;
      }
      if (Agent.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Agent);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Longtoken != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SigninRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Jwt.Length != 0) {
        Jwt = other.Jwt;
      }
      if (other.Ping != false) {
        Ping = other.Ping;
      }
      if (other.Validateonly != false) {
        Validateonly = other.Validateonly;
      }
      if (other.Agent.Length != 0) {
        Agent = other.Agent;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Longtoken != false) {
        Longtoken = other.Longtoken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            Jwt = input.ReadString();
            break;
          }
          case 32: {
            Ping = input.ReadBool();
            break;
          }
          case 40: {
            Validateonly = input.ReadBool();
            break;
          }
          case 50: {
            Agent = input.ReadString();
            break;
          }
          case 58: {
            Version = input.ReadString();
            break;
          }
          case 64: {
            Longtoken = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SigninResponse : pb::IMessage<SigninResponse> {
    private static readonly pb::MessageParser<SigninResponse> _parser = new pb::MessageParser<SigninResponse>(() => new SigninResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SigninResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SigninResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SigninResponse(SigninResponse other) : this() {
      jwt_ = other.jwt_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SigninResponse Clone() {
      return new SigninResponse(this);
    }

    /// <summary>Field number for the "jwt" field.</summary>
    public const int JwtFieldNumber = 1;
    private string jwt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Jwt {
      get { return jwt_; }
      set {
        jwt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 2;
    private global::Openiap.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Openiap.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SigninResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SigninResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Jwt != other.Jwt) return false;
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Jwt.Length != 0) hash ^= Jwt.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Jwt.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Jwt);
      }
      if (user_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Jwt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Jwt);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SigninResponse other) {
      if (other == null) {
        return;
      }
      if (other.Jwt.Length != 0) {
        Jwt = other.Jwt;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Openiap.User();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Jwt = input.ReadString();
            break;
          }
          case 18: {
            if (user_ == null) {
              User = new global::Openiap.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefreshToken : pb::IMessage<RefreshToken> {
    private static readonly pb::MessageParser<RefreshToken> _parser = new pb::MessageParser<RefreshToken>(() => new RefreshToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefreshToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshToken(RefreshToken other) : this() {
      username_ = other.username_;
      jwt_ = other.jwt_;
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefreshToken Clone() {
      return new RefreshToken(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jwt" field.</summary>
    public const int JwtFieldNumber = 2;
    private string jwt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Jwt {
      get { return jwt_; }
      set {
        jwt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 3;
    private global::Openiap.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Openiap.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefreshToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefreshToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Jwt != other.Jwt) return false;
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Jwt.Length != 0) hash ^= Jwt.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Jwt.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Jwt);
      }
      if (user_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Jwt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Jwt);
      }
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefreshToken other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Jwt.Length != 0) {
        Jwt = other.Jwt;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::Openiap.User();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Jwt = input.ReadString();
            break;
          }
          case 26: {
            if (user_ == null) {
              User = new global::Openiap.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Role : pb::IMessage<Role> {
    private static readonly pb::MessageParser<Role> _parser = new pb::MessageParser<Role>(() => new Role());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Role> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role(Role other) : this() {
      Id_ = other.Id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role Clone() {
      return new Role(this);
    }

    /// <summary>Field number for the "_id" field.</summary>
    public const int IdFieldNumber = 1;
    private string Id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return Id_; }
      set {
        Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Role);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Role other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Role other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.BaseReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      Id_ = other.Id_;
      name_ = other.name_;
      username_ = other.username_;
      email_ = other.email_;
      roles_ = other.roles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "_id" field.</summary>
    public const int IdFieldNumber = 1;
    private string Id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return Id_; }
      set {
        Id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 3;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Openiap.Role> _repeated_roles_codec
        = pb::FieldCodec.ForMessage(42, global::Openiap.Role.Parser);
    private readonly pbc::RepeatedField<global::Openiap.Role> roles_ = new pbc::RepeatedField<global::Openiap.Role>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Openiap.Role> Roles {
      get { return roles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Username != other.Username) return false;
      if (Email != other.Email) return false;
      if(!roles_.Equals(other.roles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      hash ^= roles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Username);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      roles_.Add(other.roles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Username = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
