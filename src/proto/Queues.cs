// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: queues.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Openiap {

  /// <summary>Holder for reflection information generated from queues.proto</summary>
  public static partial class QueuesReflection {

    #region Descriptor
    /// <summary>File descriptor for queues.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QueuesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxxdWV1ZXMucHJvdG8SB29wZW5pYXAiKQoUUmVnaXN0ZXJRdWV1ZVJlcXVl",
            "c3QSEQoJcXVldWVuYW1lGAEgASgJIioKFVJlZ2lzdGVyUXVldWVSZXNwb25z",
            "ZRIRCglxdWV1ZW5hbWUYASABKAkiaAoXUmVnaXN0ZXJFeGNoYW5nZVJlcXVl",
            "c3QSFAoMZXhjaGFuZ2VuYW1lGAEgASgJEhEKCWFsZ29yaXRobRgCIAEoCRIS",
            "Cgpyb3V0aW5na2V5GAMgASgJEhAKCGFkZHF1ZXVlGAQgASgIIi0KGFJlZ2lz",
            "dGVyRXhjaGFuZ2VSZXNwb25zZRIRCglxdWV1ZW5hbWUYASABKAkinAEKE1F1",
            "ZXVlTWVzc2FnZVJlcXVlc3QSEQoJcXVldWVuYW1lGAEgASgJEhUKDWNvcnJl",
            "bGF0aW9uSWQYAiABKAkSDwoHcmVwbHl0bxgDIAEoCRISCgpyb3V0aW5na2V5",
            "GAQgASgJEhQKDGV4Y2hhbmdlbmFtZRgFIAEoCRIMCgRkYXRhGAYgASgJEhIK",
            "CnN0cmlwdG9rZW4YByABKAgiiQEKFFF1ZXVlTWVzc2FnZVJlc3BvbnNlEhEK",
            "CXF1ZXVlbmFtZRgBIAEoCRIVCg1jb3JyZWxhdGlvbklkGAIgASgJEg8KB3Jl",
            "cGx5dG8YAyABKAkSEgoKcm91dGluZ2tleRgEIAEoCRIUCgxleGNoYW5nZW5h",
            "bWUYBSABKAkSDAoEZGF0YRgGIAEoCSJ/CgpRdWV1ZUV2ZW50EhEKCXF1ZXVl",
            "bmFtZRgBIAEoCRIVCg1jb3JyZWxhdGlvbklkGAIgASgJEg8KB3JlcGx5dG8Y",
            "AyABKAkSEgoKcm91dGluZ2tleRgEIAEoCRIUCgxleGNoYW5nZW5hbWUYBSAB",
            "KAkSDAoEZGF0YRgGIAEoCSIrChZVblJlZ2lzdGVyUXVldWVSZXF1ZXN0EhEK",
            "CXF1ZXVlbmFtZRgBIAEoCSIZChdVblJlZ2lzdGVyUXVldWVSZXNwb25zZSKK",
            "AQodQ3JlYXRlV29ya2Zsb3dJbnN0YW5jZVJlcXVlc3QSEAoIdGFyZ2V0aWQY",
            "ASABKAkSEgoKd29ya2Zsb3dpZBgCIAEoCRIMCgRuYW1lGAMgASgJEhMKC3Jl",
            "c3VsdHF1ZXVlGAQgASgJEgwKBGRhdGEYBSABKAkSEgoKaW5pdGlhbHJ1bhgG",
            "IAEoCCI0Ch5DcmVhdGVXb3JrZmxvd0luc3RhbmNlUmVzcG9uc2USEgoKaW5z",
            "dGFuY2VpZBgBIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.RegisterQueueRequest), global::Openiap.RegisterQueueRequest.Parser, new[]{ "Queuename" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.RegisterQueueResponse), global::Openiap.RegisterQueueResponse.Parser, new[]{ "Queuename" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.RegisterExchangeRequest), global::Openiap.RegisterExchangeRequest.Parser, new[]{ "Exchangename", "Algorithm", "Routingkey", "Addqueue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.RegisterExchangeResponse), global::Openiap.RegisterExchangeResponse.Parser, new[]{ "Queuename" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.QueueMessageRequest), global::Openiap.QueueMessageRequest.Parser, new[]{ "Queuename", "CorrelationId", "Replyto", "Routingkey", "Exchangename", "Data", "Striptoken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.QueueMessageResponse), global::Openiap.QueueMessageResponse.Parser, new[]{ "Queuename", "CorrelationId", "Replyto", "Routingkey", "Exchangename", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.QueueEvent), global::Openiap.QueueEvent.Parser, new[]{ "Queuename", "CorrelationId", "Replyto", "Routingkey", "Exchangename", "Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UnRegisterQueueRequest), global::Openiap.UnRegisterQueueRequest.Parser, new[]{ "Queuename" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UnRegisterQueueResponse), global::Openiap.UnRegisterQueueResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.CreateWorkflowInstanceRequest), global::Openiap.CreateWorkflowInstanceRequest.Parser, new[]{ "Targetid", "Workflowid", "Name", "Resultqueue", "Data", "Initialrun" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.CreateWorkflowInstanceResponse), global::Openiap.CreateWorkflowInstanceResponse.Parser, new[]{ "Instanceid" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RegisterQueueRequest : pb::IMessage<RegisterQueueRequest> {
    private static readonly pb::MessageParser<RegisterQueueRequest> _parser = new pb::MessageParser<RegisterQueueRequest>(() => new RegisterQueueRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterQueueRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterQueueRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterQueueRequest(RegisterQueueRequest other) : this() {
      queuename_ = other.queuename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterQueueRequest Clone() {
      return new RegisterQueueRequest(this);
    }

    /// <summary>Field number for the "queuename" field.</summary>
    public const int QueuenameFieldNumber = 1;
    private string queuename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queuename {
      get { return queuename_; }
      set {
        queuename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterQueueRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterQueueRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queuename != other.Queuename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queuename.Length != 0) hash ^= Queuename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queuename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Queuename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queuename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queuename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterQueueRequest other) {
      if (other == null) {
        return;
      }
      if (other.Queuename.Length != 0) {
        Queuename = other.Queuename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Queuename = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterQueueResponse : pb::IMessage<RegisterQueueResponse> {
    private static readonly pb::MessageParser<RegisterQueueResponse> _parser = new pb::MessageParser<RegisterQueueResponse>(() => new RegisterQueueResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterQueueResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterQueueResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterQueueResponse(RegisterQueueResponse other) : this() {
      queuename_ = other.queuename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterQueueResponse Clone() {
      return new RegisterQueueResponse(this);
    }

    /// <summary>Field number for the "queuename" field.</summary>
    public const int QueuenameFieldNumber = 1;
    private string queuename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queuename {
      get { return queuename_; }
      set {
        queuename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterQueueResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterQueueResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queuename != other.Queuename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queuename.Length != 0) hash ^= Queuename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queuename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Queuename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queuename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queuename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterQueueResponse other) {
      if (other == null) {
        return;
      }
      if (other.Queuename.Length != 0) {
        Queuename = other.Queuename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Queuename = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterExchangeRequest : pb::IMessage<RegisterExchangeRequest> {
    private static readonly pb::MessageParser<RegisterExchangeRequest> _parser = new pb::MessageParser<RegisterExchangeRequest>(() => new RegisterExchangeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterExchangeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterExchangeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterExchangeRequest(RegisterExchangeRequest other) : this() {
      exchangename_ = other.exchangename_;
      algorithm_ = other.algorithm_;
      routingkey_ = other.routingkey_;
      addqueue_ = other.addqueue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterExchangeRequest Clone() {
      return new RegisterExchangeRequest(this);
    }

    /// <summary>Field number for the "exchangename" field.</summary>
    public const int ExchangenameFieldNumber = 1;
    private string exchangename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchangename {
      get { return exchangename_; }
      set {
        exchangename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "algorithm" field.</summary>
    public const int AlgorithmFieldNumber = 2;
    private string algorithm_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Algorithm {
      get { return algorithm_; }
      set {
        algorithm_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "routingkey" field.</summary>
    public const int RoutingkeyFieldNumber = 3;
    private string routingkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Routingkey {
      get { return routingkey_; }
      set {
        routingkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "addqueue" field.</summary>
    public const int AddqueueFieldNumber = 4;
    private bool addqueue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Addqueue {
      get { return addqueue_; }
      set {
        addqueue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterExchangeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterExchangeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Exchangename != other.Exchangename) return false;
      if (Algorithm != other.Algorithm) return false;
      if (Routingkey != other.Routingkey) return false;
      if (Addqueue != other.Addqueue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Exchangename.Length != 0) hash ^= Exchangename.GetHashCode();
      if (Algorithm.Length != 0) hash ^= Algorithm.GetHashCode();
      if (Routingkey.Length != 0) hash ^= Routingkey.GetHashCode();
      if (Addqueue != false) hash ^= Addqueue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Exchangename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Exchangename);
      }
      if (Algorithm.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Algorithm);
      }
      if (Routingkey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Routingkey);
      }
      if (Addqueue != false) {
        output.WriteRawTag(32);
        output.WriteBool(Addqueue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Exchangename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchangename);
      }
      if (Algorithm.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Algorithm);
      }
      if (Routingkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Routingkey);
      }
      if (Addqueue != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterExchangeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Exchangename.Length != 0) {
        Exchangename = other.Exchangename;
      }
      if (other.Algorithm.Length != 0) {
        Algorithm = other.Algorithm;
      }
      if (other.Routingkey.Length != 0) {
        Routingkey = other.Routingkey;
      }
      if (other.Addqueue != false) {
        Addqueue = other.Addqueue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Exchangename = input.ReadString();
            break;
          }
          case 18: {
            Algorithm = input.ReadString();
            break;
          }
          case 26: {
            Routingkey = input.ReadString();
            break;
          }
          case 32: {
            Addqueue = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterExchangeResponse : pb::IMessage<RegisterExchangeResponse> {
    private static readonly pb::MessageParser<RegisterExchangeResponse> _parser = new pb::MessageParser<RegisterExchangeResponse>(() => new RegisterExchangeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterExchangeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterExchangeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterExchangeResponse(RegisterExchangeResponse other) : this() {
      queuename_ = other.queuename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterExchangeResponse Clone() {
      return new RegisterExchangeResponse(this);
    }

    /// <summary>Field number for the "queuename" field.</summary>
    public const int QueuenameFieldNumber = 1;
    private string queuename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queuename {
      get { return queuename_; }
      set {
        queuename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterExchangeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterExchangeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queuename != other.Queuename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queuename.Length != 0) hash ^= Queuename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queuename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Queuename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queuename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queuename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterExchangeResponse other) {
      if (other == null) {
        return;
      }
      if (other.Queuename.Length != 0) {
        Queuename = other.Queuename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Queuename = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueMessageRequest : pb::IMessage<QueueMessageRequest> {
    private static readonly pb::MessageParser<QueueMessageRequest> _parser = new pb::MessageParser<QueueMessageRequest>(() => new QueueMessageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueMessageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageRequest(QueueMessageRequest other) : this() {
      queuename_ = other.queuename_;
      correlationId_ = other.correlationId_;
      replyto_ = other.replyto_;
      routingkey_ = other.routingkey_;
      exchangename_ = other.exchangename_;
      data_ = other.data_;
      striptoken_ = other.striptoken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageRequest Clone() {
      return new QueueMessageRequest(this);
    }

    /// <summary>Field number for the "queuename" field.</summary>
    public const int QueuenameFieldNumber = 1;
    private string queuename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queuename {
      get { return queuename_; }
      set {
        queuename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 2;
    private string correlationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replyto" field.</summary>
    public const int ReplytoFieldNumber = 3;
    private string replyto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Replyto {
      get { return replyto_; }
      set {
        replyto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "routingkey" field.</summary>
    public const int RoutingkeyFieldNumber = 4;
    private string routingkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Routingkey {
      get { return routingkey_; }
      set {
        routingkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchangename" field.</summary>
    public const int ExchangenameFieldNumber = 5;
    private string exchangename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchangename {
      get { return exchangename_; }
      set {
        exchangename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "striptoken" field.</summary>
    public const int StriptokenFieldNumber = 7;
    private bool striptoken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Striptoken {
      get { return striptoken_; }
      set {
        striptoken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueMessageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueMessageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queuename != other.Queuename) return false;
      if (CorrelationId != other.CorrelationId) return false;
      if (Replyto != other.Replyto) return false;
      if (Routingkey != other.Routingkey) return false;
      if (Exchangename != other.Exchangename) return false;
      if (Data != other.Data) return false;
      if (Striptoken != other.Striptoken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queuename.Length != 0) hash ^= Queuename.GetHashCode();
      if (CorrelationId.Length != 0) hash ^= CorrelationId.GetHashCode();
      if (Replyto.Length != 0) hash ^= Replyto.GetHashCode();
      if (Routingkey.Length != 0) hash ^= Routingkey.GetHashCode();
      if (Exchangename.Length != 0) hash ^= Exchangename.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Striptoken != false) hash ^= Striptoken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queuename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Queuename);
      }
      if (CorrelationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CorrelationId);
      }
      if (Replyto.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Replyto);
      }
      if (Routingkey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Routingkey);
      }
      if (Exchangename.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Exchangename);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data);
      }
      if (Striptoken != false) {
        output.WriteRawTag(56);
        output.WriteBool(Striptoken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queuename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queuename);
      }
      if (CorrelationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrelationId);
      }
      if (Replyto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Replyto);
      }
      if (Routingkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Routingkey);
      }
      if (Exchangename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchangename);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (Striptoken != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueMessageRequest other) {
      if (other == null) {
        return;
      }
      if (other.Queuename.Length != 0) {
        Queuename = other.Queuename;
      }
      if (other.CorrelationId.Length != 0) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Replyto.Length != 0) {
        Replyto = other.Replyto;
      }
      if (other.Routingkey.Length != 0) {
        Routingkey = other.Routingkey;
      }
      if (other.Exchangename.Length != 0) {
        Exchangename = other.Exchangename;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Striptoken != false) {
        Striptoken = other.Striptoken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Queuename = input.ReadString();
            break;
          }
          case 18: {
            CorrelationId = input.ReadString();
            break;
          }
          case 26: {
            Replyto = input.ReadString();
            break;
          }
          case 34: {
            Routingkey = input.ReadString();
            break;
          }
          case 42: {
            Exchangename = input.ReadString();
            break;
          }
          case 50: {
            Data = input.ReadString();
            break;
          }
          case 56: {
            Striptoken = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueMessageResponse : pb::IMessage<QueueMessageResponse> {
    private static readonly pb::MessageParser<QueueMessageResponse> _parser = new pb::MessageParser<QueueMessageResponse>(() => new QueueMessageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueMessageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageResponse(QueueMessageResponse other) : this() {
      queuename_ = other.queuename_;
      correlationId_ = other.correlationId_;
      replyto_ = other.replyto_;
      routingkey_ = other.routingkey_;
      exchangename_ = other.exchangename_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueMessageResponse Clone() {
      return new QueueMessageResponse(this);
    }

    /// <summary>Field number for the "queuename" field.</summary>
    public const int QueuenameFieldNumber = 1;
    private string queuename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queuename {
      get { return queuename_; }
      set {
        queuename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 2;
    private string correlationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replyto" field.</summary>
    public const int ReplytoFieldNumber = 3;
    private string replyto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Replyto {
      get { return replyto_; }
      set {
        replyto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "routingkey" field.</summary>
    public const int RoutingkeyFieldNumber = 4;
    private string routingkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Routingkey {
      get { return routingkey_; }
      set {
        routingkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchangename" field.</summary>
    public const int ExchangenameFieldNumber = 5;
    private string exchangename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchangename {
      get { return exchangename_; }
      set {
        exchangename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueMessageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueMessageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queuename != other.Queuename) return false;
      if (CorrelationId != other.CorrelationId) return false;
      if (Replyto != other.Replyto) return false;
      if (Routingkey != other.Routingkey) return false;
      if (Exchangename != other.Exchangename) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queuename.Length != 0) hash ^= Queuename.GetHashCode();
      if (CorrelationId.Length != 0) hash ^= CorrelationId.GetHashCode();
      if (Replyto.Length != 0) hash ^= Replyto.GetHashCode();
      if (Routingkey.Length != 0) hash ^= Routingkey.GetHashCode();
      if (Exchangename.Length != 0) hash ^= Exchangename.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queuename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Queuename);
      }
      if (CorrelationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CorrelationId);
      }
      if (Replyto.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Replyto);
      }
      if (Routingkey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Routingkey);
      }
      if (Exchangename.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Exchangename);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queuename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queuename);
      }
      if (CorrelationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrelationId);
      }
      if (Replyto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Replyto);
      }
      if (Routingkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Routingkey);
      }
      if (Exchangename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchangename);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueMessageResponse other) {
      if (other == null) {
        return;
      }
      if (other.Queuename.Length != 0) {
        Queuename = other.Queuename;
      }
      if (other.CorrelationId.Length != 0) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Replyto.Length != 0) {
        Replyto = other.Replyto;
      }
      if (other.Routingkey.Length != 0) {
        Routingkey = other.Routingkey;
      }
      if (other.Exchangename.Length != 0) {
        Exchangename = other.Exchangename;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Queuename = input.ReadString();
            break;
          }
          case 18: {
            CorrelationId = input.ReadString();
            break;
          }
          case 26: {
            Replyto = input.ReadString();
            break;
          }
          case 34: {
            Routingkey = input.ReadString();
            break;
          }
          case 42: {
            Exchangename = input.ReadString();
            break;
          }
          case 50: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueueEvent : pb::IMessage<QueueEvent> {
    private static readonly pb::MessageParser<QueueEvent> _parser = new pb::MessageParser<QueueEvent>(() => new QueueEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueueEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueEvent(QueueEvent other) : this() {
      queuename_ = other.queuename_;
      correlationId_ = other.correlationId_;
      replyto_ = other.replyto_;
      routingkey_ = other.routingkey_;
      exchangename_ = other.exchangename_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueueEvent Clone() {
      return new QueueEvent(this);
    }

    /// <summary>Field number for the "queuename" field.</summary>
    public const int QueuenameFieldNumber = 1;
    private string queuename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queuename {
      get { return queuename_; }
      set {
        queuename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "correlationId" field.</summary>
    public const int CorrelationIdFieldNumber = 2;
    private string correlationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrelationId {
      get { return correlationId_; }
      set {
        correlationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replyto" field.</summary>
    public const int ReplytoFieldNumber = 3;
    private string replyto_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Replyto {
      get { return replyto_; }
      set {
        replyto_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "routingkey" field.</summary>
    public const int RoutingkeyFieldNumber = 4;
    private string routingkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Routingkey {
      get { return routingkey_; }
      set {
        routingkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exchangename" field.</summary>
    public const int ExchangenameFieldNumber = 5;
    private string exchangename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exchangename {
      get { return exchangename_; }
      set {
        exchangename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueueEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueueEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queuename != other.Queuename) return false;
      if (CorrelationId != other.CorrelationId) return false;
      if (Replyto != other.Replyto) return false;
      if (Routingkey != other.Routingkey) return false;
      if (Exchangename != other.Exchangename) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queuename.Length != 0) hash ^= Queuename.GetHashCode();
      if (CorrelationId.Length != 0) hash ^= CorrelationId.GetHashCode();
      if (Replyto.Length != 0) hash ^= Replyto.GetHashCode();
      if (Routingkey.Length != 0) hash ^= Routingkey.GetHashCode();
      if (Exchangename.Length != 0) hash ^= Exchangename.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queuename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Queuename);
      }
      if (CorrelationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CorrelationId);
      }
      if (Replyto.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Replyto);
      }
      if (Routingkey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Routingkey);
      }
      if (Exchangename.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Exchangename);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queuename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queuename);
      }
      if (CorrelationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrelationId);
      }
      if (Replyto.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Replyto);
      }
      if (Routingkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Routingkey);
      }
      if (Exchangename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exchangename);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueueEvent other) {
      if (other == null) {
        return;
      }
      if (other.Queuename.Length != 0) {
        Queuename = other.Queuename;
      }
      if (other.CorrelationId.Length != 0) {
        CorrelationId = other.CorrelationId;
      }
      if (other.Replyto.Length != 0) {
        Replyto = other.Replyto;
      }
      if (other.Routingkey.Length != 0) {
        Routingkey = other.Routingkey;
      }
      if (other.Exchangename.Length != 0) {
        Exchangename = other.Exchangename;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Queuename = input.ReadString();
            break;
          }
          case 18: {
            CorrelationId = input.ReadString();
            break;
          }
          case 26: {
            Replyto = input.ReadString();
            break;
          }
          case 34: {
            Routingkey = input.ReadString();
            break;
          }
          case 42: {
            Exchangename = input.ReadString();
            break;
          }
          case 50: {
            Data = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnRegisterQueueRequest : pb::IMessage<UnRegisterQueueRequest> {
    private static readonly pb::MessageParser<UnRegisterQueueRequest> _parser = new pb::MessageParser<UnRegisterQueueRequest>(() => new UnRegisterQueueRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnRegisterQueueRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnRegisterQueueRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnRegisterQueueRequest(UnRegisterQueueRequest other) : this() {
      queuename_ = other.queuename_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnRegisterQueueRequest Clone() {
      return new UnRegisterQueueRequest(this);
    }

    /// <summary>Field number for the "queuename" field.</summary>
    public const int QueuenameFieldNumber = 1;
    private string queuename_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queuename {
      get { return queuename_; }
      set {
        queuename_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnRegisterQueueRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnRegisterQueueRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Queuename != other.Queuename) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Queuename.Length != 0) hash ^= Queuename.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Queuename.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Queuename);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Queuename.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queuename);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnRegisterQueueRequest other) {
      if (other == null) {
        return;
      }
      if (other.Queuename.Length != 0) {
        Queuename = other.Queuename;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Queuename = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnRegisterQueueResponse : pb::IMessage<UnRegisterQueueResponse> {
    private static readonly pb::MessageParser<UnRegisterQueueResponse> _parser = new pb::MessageParser<UnRegisterQueueResponse>(() => new UnRegisterQueueResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnRegisterQueueResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnRegisterQueueResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnRegisterQueueResponse(UnRegisterQueueResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnRegisterQueueResponse Clone() {
      return new UnRegisterQueueResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnRegisterQueueResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnRegisterQueueResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnRegisterQueueResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class CreateWorkflowInstanceRequest : pb::IMessage<CreateWorkflowInstanceRequest> {
    private static readonly pb::MessageParser<CreateWorkflowInstanceRequest> _parser = new pb::MessageParser<CreateWorkflowInstanceRequest>(() => new CreateWorkflowInstanceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateWorkflowInstanceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorkflowInstanceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorkflowInstanceRequest(CreateWorkflowInstanceRequest other) : this() {
      targetid_ = other.targetid_;
      workflowid_ = other.workflowid_;
      name_ = other.name_;
      resultqueue_ = other.resultqueue_;
      data_ = other.data_;
      initialrun_ = other.initialrun_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorkflowInstanceRequest Clone() {
      return new CreateWorkflowInstanceRequest(this);
    }

    /// <summary>Field number for the "targetid" field.</summary>
    public const int TargetidFieldNumber = 1;
    private string targetid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Targetid {
      get { return targetid_; }
      set {
        targetid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "workflowid" field.</summary>
    public const int WorkflowidFieldNumber = 2;
    private string workflowid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Workflowid {
      get { return workflowid_; }
      set {
        workflowid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resultqueue" field.</summary>
    public const int ResultqueueFieldNumber = 4;
    private string resultqueue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Resultqueue {
      get { return resultqueue_; }
      set {
        resultqueue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private string data_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "initialrun" field.</summary>
    public const int InitialrunFieldNumber = 6;
    private bool initialrun_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Initialrun {
      get { return initialrun_; }
      set {
        initialrun_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateWorkflowInstanceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateWorkflowInstanceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Targetid != other.Targetid) return false;
      if (Workflowid != other.Workflowid) return false;
      if (Name != other.Name) return false;
      if (Resultqueue != other.Resultqueue) return false;
      if (Data != other.Data) return false;
      if (Initialrun != other.Initialrun) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Targetid.Length != 0) hash ^= Targetid.GetHashCode();
      if (Workflowid.Length != 0) hash ^= Workflowid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Resultqueue.Length != 0) hash ^= Resultqueue.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Initialrun != false) hash ^= Initialrun.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Targetid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Targetid);
      }
      if (Workflowid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Workflowid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Resultqueue.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Resultqueue);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data);
      }
      if (Initialrun != false) {
        output.WriteRawTag(48);
        output.WriteBool(Initialrun);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Targetid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Targetid);
      }
      if (Workflowid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Workflowid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Resultqueue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Resultqueue);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data);
      }
      if (Initialrun != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateWorkflowInstanceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Targetid.Length != 0) {
        Targetid = other.Targetid;
      }
      if (other.Workflowid.Length != 0) {
        Workflowid = other.Workflowid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Resultqueue.Length != 0) {
        Resultqueue = other.Resultqueue;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Initialrun != false) {
        Initialrun = other.Initialrun;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Targetid = input.ReadString();
            break;
          }
          case 18: {
            Workflowid = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Resultqueue = input.ReadString();
            break;
          }
          case 42: {
            Data = input.ReadString();
            break;
          }
          case 48: {
            Initialrun = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateWorkflowInstanceResponse : pb::IMessage<CreateWorkflowInstanceResponse> {
    private static readonly pb::MessageParser<CreateWorkflowInstanceResponse> _parser = new pb::MessageParser<CreateWorkflowInstanceResponse>(() => new CreateWorkflowInstanceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateWorkflowInstanceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QueuesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorkflowInstanceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorkflowInstanceResponse(CreateWorkflowInstanceResponse other) : this() {
      instanceid_ = other.instanceid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorkflowInstanceResponse Clone() {
      return new CreateWorkflowInstanceResponse(this);
    }

    /// <summary>Field number for the "instanceid" field.</summary>
    public const int InstanceidFieldNumber = 1;
    private string instanceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Instanceid {
      get { return instanceid_; }
      set {
        instanceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateWorkflowInstanceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateWorkflowInstanceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Instanceid != other.Instanceid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Instanceid.Length != 0) hash ^= Instanceid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Instanceid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Instanceid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Instanceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instanceid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateWorkflowInstanceResponse other) {
      if (other == null) {
        return;
      }
      if (other.Instanceid.Length != 0) {
        Instanceid = other.Instanceid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Instanceid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
