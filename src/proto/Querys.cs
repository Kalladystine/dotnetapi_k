// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: querys.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Openiap {

  /// <summary>Holder for reflection information generated from querys.proto</summary>
  public static partial class QuerysReflection {

    #region Descriptor
    /// <summary>File descriptor for querys.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QuerysReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxxdWVyeXMucHJvdG8SB29wZW5pYXAiLQoWTGlzdENvbGxlY3Rpb25zUmVx",
            "dWVzdBITCgtpbmNsdWRlaGlzdBgBIAEoCCIqChdMaXN0Q29sbGVjdGlvbnNS",
            "ZXNwb25zZRIPCgdyZXN1bHRzGAEgASgJIi8KFURyb3BDb2xsZWN0aW9uUmVx",
            "dWVzdBIWCg5jb2xsZWN0aW9ubmFtZRgBIAEoCSIYChZEcm9wQ29sbGVjdGlv",
            "blJlc3BvbnNlIoYBCgxRdWVyeVJlcXVlc3QSDQoFcXVlcnkYASABKAkSFgoO",
            "Y29sbGVjdGlvbm5hbWUYAiABKAkSEgoKcHJvamVjdGlvbhgDIAEoCRILCgN0",
            "b3AYBCABKAUSDAoEc2tpcBgFIAEoBRIPCgdvcmRlcmJ5GAYgASgJEg8KB3F1",
            "ZXJ5YXMYByABKAkiIAoNUXVlcnlSZXNwb25zZRIPCgdyZXN1bHRzGAEgASgJ",
            "ImEKGUdldERvY3VtZW50VmVyc2lvblJlcXVlc3QSFgoOY29sbGVjdGlvbm5h",
            "bWUYASABKAkSCgoCaWQYAiABKAkSDwoHdmVyc2lvbhgDIAEoBRIPCgdkZWNy",
            "eXB0GAQgASgIIiwKGkdldERvY3VtZW50VmVyc2lvblJlc3BvbnNlEg4KBnJl",
            "c3VsdBgBIAEoCSJdChBBZ2dyZWdhdGVSZXF1ZXN0EhYKDmNvbGxlY3Rpb25u",
            "YW1lGAEgASgJEhIKCmFnZ3JlZ2F0ZXMYAiABKAkSDwoHcXVlcnlhcxgDIAEo",
            "CRIMCgRoaW50GAQgASgJIiQKEUFnZ3JlZ2F0ZVJlc3BvbnNlEg8KB3Jlc3Vs",
            "dHMYASABKAkiRgoMQ291bnRSZXF1ZXN0EhYKDmNvbGxlY3Rpb25uYW1lGAEg",
            "ASgJEg0KBXF1ZXJ5GAIgASgJEg8KB3F1ZXJ5YXMYAyABKAkiHwoNQ291bnRS",
            "ZXNwb25zZRIOCgZyZXN1bHQYASABKAUiTgoQSW5zZXJ0T25lUmVxdWVzdBIW",
            "Cg5jb2xsZWN0aW9ubmFtZRgBIAEoCRIMCgRpdGVtGAIgASgJEgkKAXcYAyAB",
            "KAUSCQoBahgEIAEoCCIjChFJbnNlcnRPbmVSZXNwb25zZRIOCgZyZXN1bHQY",
            "ASABKAkiZQoRSW5zZXJ0TWFueVJlcXVlc3QSFgoOY29sbGVjdGlvbm5hbWUY",
            "ASABKAkSDQoFaXRlbXMYAiABKAkSCQoBdxgDIAEoBRIJCgFqGAQgASgIEhMK",
            "C3NraXByZXN1bHRzGAUgASgIIiUKEkluc2VydE1hbnlSZXNwb25zZRIPCgdy",
            "ZXN1bHRzGAEgASgJIk4KEFVwZGF0ZU9uZVJlcXVlc3QSFgoOY29sbGVjdGlv",
            "bm5hbWUYASABKAkSDAoEaXRlbRgCIAEoCRIJCgF3GAMgASgFEgkKAWoYBCAB",
            "KAgiIwoRVXBkYXRlT25lUmVzcG9uc2USDgoGcmVzdWx0GAEgASgJImYKFVVw",
            "ZGF0ZURvY3VtZW50UmVxdWVzdBIWCg5jb2xsZWN0aW9ubmFtZRgBIAEoCRIN",
            "CgVxdWVyeRgCIAEoCRIQCghkb2N1bWVudBgDIAEoCRIJCgF3GAQgASgFEgkK",
            "AWoYBSABKAgifAoMVXBkYXRlUmVzdWx0EhQKDGFja25vd2xlZGdlZBgBIAEo",
            "CBIUCgxtYXRjaGVkQ291bnQYAiABKAUSFQoNbW9kaWZpZWRDb3VudBgDIAEo",
            "BRIVCg11cHNlcnRlZENvdW50GAQgASgFEhIKCnVwc2VydGVkSWQYBSABKAki",
            "QQoWVXBkYXRlRG9jdW1lbnRSZXNwb25zZRInCghvcHJlc3VsdBgBIAEoCzIV",
            "Lm9wZW5pYXAuVXBkYXRlUmVzdWx0ImkKGEluc2VydE9yVXBkYXRlT25lUmVx",
            "dWVzdBIWCg5jb2xsZWN0aW9ubmFtZRgBIAEoCRIRCgl1bmlxZW5lc3MYAiAB",
            "KAkSDAoEaXRlbRgDIAEoCRIJCgF3GAQgASgFEgkKAWoYBSABKAgiKwoZSW5z",
            "ZXJ0T3JVcGRhdGVPbmVSZXNwb25zZRIOCgZyZXN1bHQYASABKAkigAEKGUlu",
            "c2VydE9yVXBkYXRlTWFueVJlcXVlc3QSFgoOY29sbGVjdGlvbm5hbWUYASAB",
            "KAkSEQoJdW5pcWVuZXNzGAIgASgJEg0KBWl0ZW1zGAMgASgJEgkKAXcYBCAB",
            "KAUSCQoBahgFIAEoCBITCgtza2lwcmVzdWx0cxgGIAEoCCItChpJbnNlcnRP",
            "clVwZGF0ZU1hbnlSZXNwb25zZRIPCgdyZXN1bHRzGAEgASgJIkkKEERlbGV0",
            "ZU9uZVJlcXVlc3QSFgoOY29sbGVjdGlvbm5hbWUYASABKAkSCgoCaWQYAiAB",
            "KAkSEQoJcmVjdXJzaXZlGAMgASgIIikKEURlbGV0ZU9uZVJlc3BvbnNlEhQK",
            "DGFmZmVjdGVkcm93cxgBIAEoBSJaChFEZWxldGVNYW55UmVxdWVzdBIWCg5j",
            "b2xsZWN0aW9ubmFtZRgBIAEoCRINCgVxdWVyeRgCIAEoCRIRCglyZWN1cnNp",
            "dmUYAyABKAgSCwoDaWRzGAQgAygJIioKEkRlbGV0ZU1hbnlSZXNwb25zZRIU",
            "CgxhZmZlY3RlZHJvd3MYASABKAViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.ListCollectionsRequest), global::Openiap.ListCollectionsRequest.Parser, new[]{ "Includehist" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.ListCollectionsResponse), global::Openiap.ListCollectionsResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DropCollectionRequest), global::Openiap.DropCollectionRequest.Parser, new[]{ "Collectionname" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DropCollectionResponse), global::Openiap.DropCollectionResponse.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.QueryRequest), global::Openiap.QueryRequest.Parser, new[]{ "Query", "Collectionname", "Projection", "Top", "Skip", "Orderby", "Queryas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.QueryResponse), global::Openiap.QueryResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.GetDocumentVersionRequest), global::Openiap.GetDocumentVersionRequest.Parser, new[]{ "Collectionname", "Id", "Version", "Decrypt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.GetDocumentVersionResponse), global::Openiap.GetDocumentVersionResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.AggregateRequest), global::Openiap.AggregateRequest.Parser, new[]{ "Collectionname", "Aggregates", "Queryas", "Hint" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.AggregateResponse), global::Openiap.AggregateResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.CountRequest), global::Openiap.CountRequest.Parser, new[]{ "Collectionname", "Query", "Queryas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.CountResponse), global::Openiap.CountResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertOneRequest), global::Openiap.InsertOneRequest.Parser, new[]{ "Collectionname", "Item", "W", "J" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertOneResponse), global::Openiap.InsertOneResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertManyRequest), global::Openiap.InsertManyRequest.Parser, new[]{ "Collectionname", "Items", "W", "J", "Skipresults" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertManyResponse), global::Openiap.InsertManyResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UpdateOneRequest), global::Openiap.UpdateOneRequest.Parser, new[]{ "Collectionname", "Item", "W", "J" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UpdateOneResponse), global::Openiap.UpdateOneResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UpdateDocumentRequest), global::Openiap.UpdateDocumentRequest.Parser, new[]{ "Collectionname", "Query", "Document", "W", "J" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UpdateResult), global::Openiap.UpdateResult.Parser, new[]{ "Acknowledged", "MatchedCount", "ModifiedCount", "UpsertedCount", "UpsertedId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.UpdateDocumentResponse), global::Openiap.UpdateDocumentResponse.Parser, new[]{ "Opresult" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertOrUpdateOneRequest), global::Openiap.InsertOrUpdateOneRequest.Parser, new[]{ "Collectionname", "Uniqeness", "Item", "W", "J" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertOrUpdateOneResponse), global::Openiap.InsertOrUpdateOneResponse.Parser, new[]{ "Result" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertOrUpdateManyRequest), global::Openiap.InsertOrUpdateManyRequest.Parser, new[]{ "Collectionname", "Uniqeness", "Items", "W", "J", "Skipresults" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.InsertOrUpdateManyResponse), global::Openiap.InsertOrUpdateManyResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DeleteOneRequest), global::Openiap.DeleteOneRequest.Parser, new[]{ "Collectionname", "Id", "Recursive" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DeleteOneResponse), global::Openiap.DeleteOneResponse.Parser, new[]{ "Affectedrows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DeleteManyRequest), global::Openiap.DeleteManyRequest.Parser, new[]{ "Collectionname", "Query", "Recursive", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Openiap.DeleteManyResponse), global::Openiap.DeleteManyResponse.Parser, new[]{ "Affectedrows" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ListCollectionsRequest : pb::IMessage<ListCollectionsRequest> {
    private static readonly pb::MessageParser<ListCollectionsRequest> _parser = new pb::MessageParser<ListCollectionsRequest>(() => new ListCollectionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCollectionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectionsRequest(ListCollectionsRequest other) : this() {
      includehist_ = other.includehist_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectionsRequest Clone() {
      return new ListCollectionsRequest(this);
    }

    /// <summary>Field number for the "includehist" field.</summary>
    public const int IncludehistFieldNumber = 1;
    private bool includehist_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Includehist {
      get { return includehist_; }
      set {
        includehist_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCollectionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCollectionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Includehist != other.Includehist) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Includehist != false) hash ^= Includehist.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Includehist != false) {
        output.WriteRawTag(8);
        output.WriteBool(Includehist);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Includehist != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCollectionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Includehist != false) {
        Includehist = other.Includehist;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Includehist = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCollectionsResponse : pb::IMessage<ListCollectionsResponse> {
    private static readonly pb::MessageParser<ListCollectionsResponse> _parser = new pb::MessageParser<ListCollectionsResponse>(() => new ListCollectionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCollectionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectionsResponse(ListCollectionsResponse other) : this() {
      results_ = other.results_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectionsResponse Clone() {
      return new ListCollectionsResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private string results_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Results {
      get { return results_; }
      set {
        results_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCollectionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCollectionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Results != other.Results) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Results.Length != 0) hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Results.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Results.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Results);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCollectionsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Results.Length != 0) {
        Results = other.Results;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Results = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DropCollectionRequest : pb::IMessage<DropCollectionRequest> {
    private static readonly pb::MessageParser<DropCollectionRequest> _parser = new pb::MessageParser<DropCollectionRequest>(() => new DropCollectionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropCollectionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropCollectionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropCollectionRequest(DropCollectionRequest other) : this() {
      collectionname_ = other.collectionname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropCollectionRequest Clone() {
      return new DropCollectionRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropCollectionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropCollectionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropCollectionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DropCollectionResponse : pb::IMessage<DropCollectionResponse> {
    private static readonly pb::MessageParser<DropCollectionResponse> _parser = new pb::MessageParser<DropCollectionResponse>(() => new DropCollectionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DropCollectionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropCollectionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropCollectionResponse(DropCollectionResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DropCollectionResponse Clone() {
      return new DropCollectionResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DropCollectionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DropCollectionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DropCollectionResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryRequest : pb::IMessage<QueryRequest> {
    private static readonly pb::MessageParser<QueryRequest> _parser = new pb::MessageParser<QueryRequest>(() => new QueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest(QueryRequest other) : this() {
      query_ = other.query_;
      collectionname_ = other.collectionname_;
      projection_ = other.projection_;
      top_ = other.top_;
      skip_ = other.skip_;
      orderby_ = other.orderby_;
      queryas_ = other.queryas_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRequest Clone() {
      return new QueryRequest(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 2;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "projection" field.</summary>
    public const int ProjectionFieldNumber = 3;
    private string projection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Projection {
      get { return projection_; }
      set {
        projection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "top" field.</summary>
    public const int TopFieldNumber = 4;
    private int top_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Top {
      get { return top_; }
      set {
        top_ = value;
      }
    }

    /// <summary>Field number for the "skip" field.</summary>
    public const int SkipFieldNumber = 5;
    private int skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }

    /// <summary>Field number for the "orderby" field.</summary>
    public const int OrderbyFieldNumber = 6;
    private string orderby_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Orderby {
      get { return orderby_; }
      set {
        orderby_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "queryas" field.</summary>
    public const int QueryasFieldNumber = 7;
    private string queryas_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queryas {
      get { return queryas_; }
      set {
        queryas_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query != other.Query) return false;
      if (Collectionname != other.Collectionname) return false;
      if (Projection != other.Projection) return false;
      if (Top != other.Top) return false;
      if (Skip != other.Skip) return false;
      if (Orderby != other.Orderby) return false;
      if (Queryas != other.Queryas) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Projection.Length != 0) hash ^= Projection.GetHashCode();
      if (Top != 0) hash ^= Top.GetHashCode();
      if (Skip != 0) hash ^= Skip.GetHashCode();
      if (Orderby.Length != 0) hash ^= Orderby.GetHashCode();
      if (Queryas.Length != 0) hash ^= Queryas.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (Collectionname.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Collectionname);
      }
      if (Projection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Projection);
      }
      if (Top != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Top);
      }
      if (Skip != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Skip);
      }
      if (Orderby.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Orderby);
      }
      if (Queryas.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Queryas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Projection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Projection);
      }
      if (Top != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Top);
      }
      if (Skip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skip);
      }
      if (Orderby.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Orderby);
      }
      if (Queryas.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queryas);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Projection.Length != 0) {
        Projection = other.Projection;
      }
      if (other.Top != 0) {
        Top = other.Top;
      }
      if (other.Skip != 0) {
        Skip = other.Skip;
      }
      if (other.Orderby.Length != 0) {
        Orderby = other.Orderby;
      }
      if (other.Queryas.Length != 0) {
        Queryas = other.Queryas;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
          case 18: {
            Collectionname = input.ReadString();
            break;
          }
          case 26: {
            Projection = input.ReadString();
            break;
          }
          case 32: {
            Top = input.ReadInt32();
            break;
          }
          case 40: {
            Skip = input.ReadInt32();
            break;
          }
          case 50: {
            Orderby = input.ReadString();
            break;
          }
          case 58: {
            Queryas = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse : pb::IMessage<QueryResponse> {
    private static readonly pb::MessageParser<QueryResponse> _parser = new pb::MessageParser<QueryResponse>(() => new QueryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse(QueryResponse other) : this() {
      results_ = other.results_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse Clone() {
      return new QueryResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private string results_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Results {
      get { return results_; }
      set {
        results_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Results != other.Results) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Results.Length != 0) hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Results.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Results.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Results);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse other) {
      if (other == null) {
        return;
      }
      if (other.Results.Length != 0) {
        Results = other.Results;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Results = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDocumentVersionRequest : pb::IMessage<GetDocumentVersionRequest> {
    private static readonly pb::MessageParser<GetDocumentVersionRequest> _parser = new pb::MessageParser<GetDocumentVersionRequest>(() => new GetDocumentVersionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDocumentVersionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentVersionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentVersionRequest(GetDocumentVersionRequest other) : this() {
      collectionname_ = other.collectionname_;
      id_ = other.id_;
      version_ = other.version_;
      decrypt_ = other.decrypt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentVersionRequest Clone() {
      return new GetDocumentVersionRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 3;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "decrypt" field.</summary>
    public const int DecryptFieldNumber = 4;
    private bool decrypt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Decrypt {
      get { return decrypt_; }
      set {
        decrypt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDocumentVersionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDocumentVersionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Id != other.Id) return false;
      if (Version != other.Version) return false;
      if (Decrypt != other.Decrypt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Decrypt != false) hash ^= Decrypt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Version != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Version);
      }
      if (Decrypt != false) {
        output.WriteRawTag(32);
        output.WriteBool(Decrypt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Decrypt != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDocumentVersionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Decrypt != false) {
        Decrypt = other.Decrypt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Version = input.ReadInt32();
            break;
          }
          case 32: {
            Decrypt = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDocumentVersionResponse : pb::IMessage<GetDocumentVersionResponse> {
    private static readonly pb::MessageParser<GetDocumentVersionResponse> _parser = new pb::MessageParser<GetDocumentVersionResponse>(() => new GetDocumentVersionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDocumentVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentVersionResponse(GetDocumentVersionResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDocumentVersionResponse Clone() {
      return new GetDocumentVersionResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDocumentVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDocumentVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDocumentVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AggregateRequest : pb::IMessage<AggregateRequest> {
    private static readonly pb::MessageParser<AggregateRequest> _parser = new pb::MessageParser<AggregateRequest>(() => new AggregateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRequest(AggregateRequest other) : this() {
      collectionname_ = other.collectionname_;
      aggregates_ = other.aggregates_;
      queryas_ = other.queryas_;
      hint_ = other.hint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRequest Clone() {
      return new AggregateRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aggregates" field.</summary>
    public const int AggregatesFieldNumber = 2;
    private string aggregates_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Aggregates {
      get { return aggregates_; }
      set {
        aggregates_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "queryas" field.</summary>
    public const int QueryasFieldNumber = 3;
    private string queryas_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queryas {
      get { return queryas_; }
      set {
        queryas_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hint" field.</summary>
    public const int HintFieldNumber = 4;
    private string hint_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hint {
      get { return hint_; }
      set {
        hint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Aggregates != other.Aggregates) return false;
      if (Queryas != other.Queryas) return false;
      if (Hint != other.Hint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Aggregates.Length != 0) hash ^= Aggregates.GetHashCode();
      if (Queryas.Length != 0) hash ^= Queryas.GetHashCode();
      if (Hint.Length != 0) hash ^= Hint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Aggregates.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Aggregates);
      }
      if (Queryas.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Queryas);
      }
      if (Hint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Hint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Aggregates.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Aggregates);
      }
      if (Queryas.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queryas);
      }
      if (Hint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Aggregates.Length != 0) {
        Aggregates = other.Aggregates;
      }
      if (other.Queryas.Length != 0) {
        Queryas = other.Queryas;
      }
      if (other.Hint.Length != 0) {
        Hint = other.Hint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Aggregates = input.ReadString();
            break;
          }
          case 26: {
            Queryas = input.ReadString();
            break;
          }
          case 34: {
            Hint = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AggregateResponse : pb::IMessage<AggregateResponse> {
    private static readonly pb::MessageParser<AggregateResponse> _parser = new pb::MessageParser<AggregateResponse>(() => new AggregateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateResponse(AggregateResponse other) : this() {
      results_ = other.results_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateResponse Clone() {
      return new AggregateResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private string results_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Results {
      get { return results_; }
      set {
        results_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Results != other.Results) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Results.Length != 0) hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Results.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Results.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Results);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Results.Length != 0) {
        Results = other.Results;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Results = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CountRequest : pb::IMessage<CountRequest> {
    private static readonly pb::MessageParser<CountRequest> _parser = new pb::MessageParser<CountRequest>(() => new CountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRequest(CountRequest other) : this() {
      collectionname_ = other.collectionname_;
      query_ = other.query_;
      queryas_ = other.queryas_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountRequest Clone() {
      return new CountRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "queryas" field.</summary>
    public const int QueryasFieldNumber = 3;
    private string queryas_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Queryas {
      get { return queryas_; }
      set {
        queryas_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Query != other.Query) return false;
      if (Queryas != other.Queryas) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Queryas.Length != 0) hash ^= Queryas.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Query);
      }
      if (Queryas.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Queryas);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Queryas.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Queryas);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Queryas.Length != 0) {
        Queryas = other.Queryas;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadString();
            break;
          }
          case 26: {
            Queryas = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CountResponse : pb::IMessage<CountResponse> {
    private static readonly pb::MessageParser<CountResponse> _parser = new pb::MessageParser<CountResponse>(() => new CountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountResponse(CountResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CountResponse Clone() {
      return new CountResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CountResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOneRequest : pb::IMessage<InsertOneRequest> {
    private static readonly pb::MessageParser<InsertOneRequest> _parser = new pb::MessageParser<InsertOneRequest>(() => new InsertOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRequest(InsertOneRequest other) : this() {
      collectionname_ = other.collectionname_;
      item_ = other.item_;
      w_ = other.w_;
      j_ = other.j_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneRequest Clone() {
      return new InsertOneRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private string item_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Item {
      get { return item_; }
      set {
        item_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 3;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 4;
    private bool j_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Item != other.Item) return false;
      if (W != other.W) return false;
      if (J != other.J) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Item.Length != 0) hash ^= Item.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (J != false) hash ^= J.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Item.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Item);
      }
      if (W != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(W);
      }
      if (J != false) {
        output.WriteRawTag(32);
        output.WriteBool(J);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Item.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Item);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (J != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Item.Length != 0) {
        Item = other.Item;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.J != false) {
        J = other.J;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Item = input.ReadString();
            break;
          }
          case 24: {
            W = input.ReadInt32();
            break;
          }
          case 32: {
            J = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOneResponse : pb::IMessage<InsertOneResponse> {
    private static readonly pb::MessageParser<InsertOneResponse> _parser = new pb::MessageParser<InsertOneResponse>(() => new InsertOneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneResponse(InsertOneResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOneResponse Clone() {
      return new InsertOneResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOneResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertManyRequest : pb::IMessage<InsertManyRequest> {
    private static readonly pb::MessageParser<InsertManyRequest> _parser = new pb::MessageParser<InsertManyRequest>(() => new InsertManyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertManyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRequest(InsertManyRequest other) : this() {
      collectionname_ = other.collectionname_;
      items_ = other.items_;
      w_ = other.w_;
      j_ = other.j_;
      skipresults_ = other.skipresults_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyRequest Clone() {
      return new InsertManyRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private string items_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Items {
      get { return items_; }
      set {
        items_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 3;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 4;
    private bool j_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    /// <summary>Field number for the "skipresults" field.</summary>
    public const int SkipresultsFieldNumber = 5;
    private bool skipresults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Skipresults {
      get { return skipresults_; }
      set {
        skipresults_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertManyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertManyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Items != other.Items) return false;
      if (W != other.W) return false;
      if (J != other.J) return false;
      if (Skipresults != other.Skipresults) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Items.Length != 0) hash ^= Items.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (J != false) hash ^= J.GetHashCode();
      if (Skipresults != false) hash ^= Skipresults.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Items.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Items);
      }
      if (W != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(W);
      }
      if (J != false) {
        output.WriteRawTag(32);
        output.WriteBool(J);
      }
      if (Skipresults != false) {
        output.WriteRawTag(40);
        output.WriteBool(Skipresults);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Items.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Items);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (J != false) {
        size += 1 + 1;
      }
      if (Skipresults != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertManyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Items.Length != 0) {
        Items = other.Items;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.J != false) {
        J = other.J;
      }
      if (other.Skipresults != false) {
        Skipresults = other.Skipresults;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Items = input.ReadString();
            break;
          }
          case 24: {
            W = input.ReadInt32();
            break;
          }
          case 32: {
            J = input.ReadBool();
            break;
          }
          case 40: {
            Skipresults = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertManyResponse : pb::IMessage<InsertManyResponse> {
    private static readonly pb::MessageParser<InsertManyResponse> _parser = new pb::MessageParser<InsertManyResponse>(() => new InsertManyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertManyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyResponse(InsertManyResponse other) : this() {
      results_ = other.results_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertManyResponse Clone() {
      return new InsertManyResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private string results_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Results {
      get { return results_; }
      set {
        results_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertManyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertManyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Results != other.Results) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Results.Length != 0) hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Results.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Results.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Results);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertManyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Results.Length != 0) {
        Results = other.Results;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Results = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateOneRequest : pb::IMessage<UpdateOneRequest> {
    private static readonly pb::MessageParser<UpdateOneRequest> _parser = new pb::MessageParser<UpdateOneRequest>(() => new UpdateOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRequest(UpdateOneRequest other) : this() {
      collectionname_ = other.collectionname_;
      item_ = other.item_;
      w_ = other.w_;
      j_ = other.j_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneRequest Clone() {
      return new UpdateOneRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private string item_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Item {
      get { return item_; }
      set {
        item_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 3;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 4;
    private bool j_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Item != other.Item) return false;
      if (W != other.W) return false;
      if (J != other.J) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Item.Length != 0) hash ^= Item.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (J != false) hash ^= J.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Item.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Item);
      }
      if (W != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(W);
      }
      if (J != false) {
        output.WriteRawTag(32);
        output.WriteBool(J);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Item.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Item);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (J != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Item.Length != 0) {
        Item = other.Item;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.J != false) {
        J = other.J;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Item = input.ReadString();
            break;
          }
          case 24: {
            W = input.ReadInt32();
            break;
          }
          case 32: {
            J = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateOneResponse : pb::IMessage<UpdateOneResponse> {
    private static readonly pb::MessageParser<UpdateOneResponse> _parser = new pb::MessageParser<UpdateOneResponse>(() => new UpdateOneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateOneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneResponse(UpdateOneResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateOneResponse Clone() {
      return new UpdateOneResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateOneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateOneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateOneResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateDocumentRequest : pb::IMessage<UpdateDocumentRequest> {
    private static readonly pb::MessageParser<UpdateDocumentRequest> _parser = new pb::MessageParser<UpdateDocumentRequest>(() => new UpdateDocumentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateDocumentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDocumentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDocumentRequest(UpdateDocumentRequest other) : this() {
      collectionname_ = other.collectionname_;
      query_ = other.query_;
      document_ = other.document_;
      w_ = other.w_;
      j_ = other.j_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDocumentRequest Clone() {
      return new UpdateDocumentRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "document" field.</summary>
    public const int DocumentFieldNumber = 3;
    private string document_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Document {
      get { return document_; }
      set {
        document_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 5;
    private bool j_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateDocumentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateDocumentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Query != other.Query) return false;
      if (Document != other.Document) return false;
      if (W != other.W) return false;
      if (J != other.J) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Document.Length != 0) hash ^= Document.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (J != false) hash ^= J.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Query);
      }
      if (Document.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Document);
      }
      if (W != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(W);
      }
      if (J != false) {
        output.WriteRawTag(40);
        output.WriteBool(J);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Document.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Document);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (J != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateDocumentRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Document.Length != 0) {
        Document = other.Document;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.J != false) {
        J = other.J;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadString();
            break;
          }
          case 26: {
            Document = input.ReadString();
            break;
          }
          case 32: {
            W = input.ReadInt32();
            break;
          }
          case 40: {
            J = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResult : pb::IMessage<UpdateResult> {
    private static readonly pb::MessageParser<UpdateResult> _parser = new pb::MessageParser<UpdateResult>(() => new UpdateResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResult(UpdateResult other) : this() {
      acknowledged_ = other.acknowledged_;
      matchedCount_ = other.matchedCount_;
      modifiedCount_ = other.modifiedCount_;
      upsertedCount_ = other.upsertedCount_;
      upsertedId_ = other.upsertedId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResult Clone() {
      return new UpdateResult(this);
    }

    /// <summary>Field number for the "acknowledged" field.</summary>
    public const int AcknowledgedFieldNumber = 1;
    private bool acknowledged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Acknowledged {
      get { return acknowledged_; }
      set {
        acknowledged_ = value;
      }
    }

    /// <summary>Field number for the "matchedCount" field.</summary>
    public const int MatchedCountFieldNumber = 2;
    private int matchedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MatchedCount {
      get { return matchedCount_; }
      set {
        matchedCount_ = value;
      }
    }

    /// <summary>Field number for the "modifiedCount" field.</summary>
    public const int ModifiedCountFieldNumber = 3;
    private int modifiedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ModifiedCount {
      get { return modifiedCount_; }
      set {
        modifiedCount_ = value;
      }
    }

    /// <summary>Field number for the "upsertedCount" field.</summary>
    public const int UpsertedCountFieldNumber = 4;
    private int upsertedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UpsertedCount {
      get { return upsertedCount_; }
      set {
        upsertedCount_ = value;
      }
    }

    /// <summary>Field number for the "upsertedId" field.</summary>
    public const int UpsertedIdFieldNumber = 5;
    private string upsertedId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpsertedId {
      get { return upsertedId_; }
      set {
        upsertedId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Acknowledged != other.Acknowledged) return false;
      if (MatchedCount != other.MatchedCount) return false;
      if (ModifiedCount != other.ModifiedCount) return false;
      if (UpsertedCount != other.UpsertedCount) return false;
      if (UpsertedId != other.UpsertedId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Acknowledged != false) hash ^= Acknowledged.GetHashCode();
      if (MatchedCount != 0) hash ^= MatchedCount.GetHashCode();
      if (ModifiedCount != 0) hash ^= ModifiedCount.GetHashCode();
      if (UpsertedCount != 0) hash ^= UpsertedCount.GetHashCode();
      if (UpsertedId.Length != 0) hash ^= UpsertedId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Acknowledged != false) {
        output.WriteRawTag(8);
        output.WriteBool(Acknowledged);
      }
      if (MatchedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MatchedCount);
      }
      if (ModifiedCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ModifiedCount);
      }
      if (UpsertedCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UpsertedCount);
      }
      if (UpsertedId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UpsertedId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Acknowledged != false) {
        size += 1 + 1;
      }
      if (MatchedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MatchedCount);
      }
      if (ModifiedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ModifiedCount);
      }
      if (UpsertedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UpsertedCount);
      }
      if (UpsertedId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpsertedId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResult other) {
      if (other == null) {
        return;
      }
      if (other.Acknowledged != false) {
        Acknowledged = other.Acknowledged;
      }
      if (other.MatchedCount != 0) {
        MatchedCount = other.MatchedCount;
      }
      if (other.ModifiedCount != 0) {
        ModifiedCount = other.ModifiedCount;
      }
      if (other.UpsertedCount != 0) {
        UpsertedCount = other.UpsertedCount;
      }
      if (other.UpsertedId.Length != 0) {
        UpsertedId = other.UpsertedId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Acknowledged = input.ReadBool();
            break;
          }
          case 16: {
            MatchedCount = input.ReadInt32();
            break;
          }
          case 24: {
            ModifiedCount = input.ReadInt32();
            break;
          }
          case 32: {
            UpsertedCount = input.ReadInt32();
            break;
          }
          case 42: {
            UpsertedId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateDocumentResponse : pb::IMessage<UpdateDocumentResponse> {
    private static readonly pb::MessageParser<UpdateDocumentResponse> _parser = new pb::MessageParser<UpdateDocumentResponse>(() => new UpdateDocumentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateDocumentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDocumentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDocumentResponse(UpdateDocumentResponse other) : this() {
      opresult_ = other.opresult_ != null ? other.opresult_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateDocumentResponse Clone() {
      return new UpdateDocumentResponse(this);
    }

    /// <summary>Field number for the "opresult" field.</summary>
    public const int OpresultFieldNumber = 1;
    private global::Openiap.UpdateResult opresult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Openiap.UpdateResult Opresult {
      get { return opresult_; }
      set {
        opresult_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateDocumentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateDocumentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Opresult, other.Opresult)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (opresult_ != null) hash ^= Opresult.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (opresult_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Opresult);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (opresult_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Opresult);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateDocumentResponse other) {
      if (other == null) {
        return;
      }
      if (other.opresult_ != null) {
        if (opresult_ == null) {
          Opresult = new global::Openiap.UpdateResult();
        }
        Opresult.MergeFrom(other.Opresult);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (opresult_ == null) {
              Opresult = new global::Openiap.UpdateResult();
            }
            input.ReadMessage(Opresult);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOrUpdateOneRequest : pb::IMessage<InsertOrUpdateOneRequest> {
    private static readonly pb::MessageParser<InsertOrUpdateOneRequest> _parser = new pb::MessageParser<InsertOrUpdateOneRequest>(() => new InsertOrUpdateOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOrUpdateOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateOneRequest(InsertOrUpdateOneRequest other) : this() {
      collectionname_ = other.collectionname_;
      uniqeness_ = other.uniqeness_;
      item_ = other.item_;
      w_ = other.w_;
      j_ = other.j_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateOneRequest Clone() {
      return new InsertOrUpdateOneRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uniqeness" field.</summary>
    public const int UniqenessFieldNumber = 2;
    private string uniqeness_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uniqeness {
      get { return uniqeness_; }
      set {
        uniqeness_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 3;
    private string item_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Item {
      get { return item_; }
      set {
        item_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 5;
    private bool j_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOrUpdateOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOrUpdateOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Uniqeness != other.Uniqeness) return false;
      if (Item != other.Item) return false;
      if (W != other.W) return false;
      if (J != other.J) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Uniqeness.Length != 0) hash ^= Uniqeness.GetHashCode();
      if (Item.Length != 0) hash ^= Item.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (J != false) hash ^= J.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Uniqeness.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uniqeness);
      }
      if (Item.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Item);
      }
      if (W != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(W);
      }
      if (J != false) {
        output.WriteRawTag(40);
        output.WriteBool(J);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Uniqeness.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uniqeness);
      }
      if (Item.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Item);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (J != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOrUpdateOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Uniqeness.Length != 0) {
        Uniqeness = other.Uniqeness;
      }
      if (other.Item.Length != 0) {
        Item = other.Item;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.J != false) {
        J = other.J;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Uniqeness = input.ReadString();
            break;
          }
          case 26: {
            Item = input.ReadString();
            break;
          }
          case 32: {
            W = input.ReadInt32();
            break;
          }
          case 40: {
            J = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOrUpdateOneResponse : pb::IMessage<InsertOrUpdateOneResponse> {
    private static readonly pb::MessageParser<InsertOrUpdateOneResponse> _parser = new pb::MessageParser<InsertOrUpdateOneResponse>(() => new InsertOrUpdateOneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOrUpdateOneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateOneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateOneResponse(InsertOrUpdateOneResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateOneResponse Clone() {
      return new InsertOrUpdateOneResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOrUpdateOneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOrUpdateOneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOrUpdateOneResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOrUpdateManyRequest : pb::IMessage<InsertOrUpdateManyRequest> {
    private static readonly pb::MessageParser<InsertOrUpdateManyRequest> _parser = new pb::MessageParser<InsertOrUpdateManyRequest>(() => new InsertOrUpdateManyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOrUpdateManyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateManyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateManyRequest(InsertOrUpdateManyRequest other) : this() {
      collectionname_ = other.collectionname_;
      uniqeness_ = other.uniqeness_;
      items_ = other.items_;
      w_ = other.w_;
      j_ = other.j_;
      skipresults_ = other.skipresults_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateManyRequest Clone() {
      return new InsertOrUpdateManyRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uniqeness" field.</summary>
    public const int UniqenessFieldNumber = 2;
    private string uniqeness_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uniqeness {
      get { return uniqeness_; }
      set {
        uniqeness_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 3;
    private string items_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Items {
      get { return items_; }
      set {
        items_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "w" field.</summary>
    public const int WFieldNumber = 4;
    private int w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "j" field.</summary>
    public const int JFieldNumber = 5;
    private bool j_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool J {
      get { return j_; }
      set {
        j_ = value;
      }
    }

    /// <summary>Field number for the "skipresults" field.</summary>
    public const int SkipresultsFieldNumber = 6;
    private bool skipresults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Skipresults {
      get { return skipresults_; }
      set {
        skipresults_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOrUpdateManyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOrUpdateManyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Uniqeness != other.Uniqeness) return false;
      if (Items != other.Items) return false;
      if (W != other.W) return false;
      if (J != other.J) return false;
      if (Skipresults != other.Skipresults) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Uniqeness.Length != 0) hash ^= Uniqeness.GetHashCode();
      if (Items.Length != 0) hash ^= Items.GetHashCode();
      if (W != 0) hash ^= W.GetHashCode();
      if (J != false) hash ^= J.GetHashCode();
      if (Skipresults != false) hash ^= Skipresults.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Uniqeness.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Uniqeness);
      }
      if (Items.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Items);
      }
      if (W != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(W);
      }
      if (J != false) {
        output.WriteRawTag(40);
        output.WriteBool(J);
      }
      if (Skipresults != false) {
        output.WriteRawTag(48);
        output.WriteBool(Skipresults);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Uniqeness.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uniqeness);
      }
      if (Items.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Items);
      }
      if (W != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(W);
      }
      if (J != false) {
        size += 1 + 1;
      }
      if (Skipresults != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOrUpdateManyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Uniqeness.Length != 0) {
        Uniqeness = other.Uniqeness;
      }
      if (other.Items.Length != 0) {
        Items = other.Items;
      }
      if (other.W != 0) {
        W = other.W;
      }
      if (other.J != false) {
        J = other.J;
      }
      if (other.Skipresults != false) {
        Skipresults = other.Skipresults;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Uniqeness = input.ReadString();
            break;
          }
          case 26: {
            Items = input.ReadString();
            break;
          }
          case 32: {
            W = input.ReadInt32();
            break;
          }
          case 40: {
            J = input.ReadBool();
            break;
          }
          case 48: {
            Skipresults = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertOrUpdateManyResponse : pb::IMessage<InsertOrUpdateManyResponse> {
    private static readonly pb::MessageParser<InsertOrUpdateManyResponse> _parser = new pb::MessageParser<InsertOrUpdateManyResponse>(() => new InsertOrUpdateManyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertOrUpdateManyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateManyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateManyResponse(InsertOrUpdateManyResponse other) : this() {
      results_ = other.results_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertOrUpdateManyResponse Clone() {
      return new InsertOrUpdateManyResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private string results_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Results {
      get { return results_; }
      set {
        results_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertOrUpdateManyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertOrUpdateManyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Results != other.Results) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Results.Length != 0) hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Results.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Results.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Results);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertOrUpdateManyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Results.Length != 0) {
        Results = other.Results;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Results = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteOneRequest : pb::IMessage<DeleteOneRequest> {
    private static readonly pb::MessageParser<DeleteOneRequest> _parser = new pb::MessageParser<DeleteOneRequest>(() => new DeleteOneRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOneRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRequest(DeleteOneRequest other) : this() {
      collectionname_ = other.collectionname_;
      id_ = other.id_;
      recursive_ = other.recursive_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneRequest Clone() {
      return new DeleteOneRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recursive" field.</summary>
    public const int RecursiveFieldNumber = 3;
    private bool recursive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Recursive {
      get { return recursive_; }
      set {
        recursive_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOneRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOneRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Id != other.Id) return false;
      if (Recursive != other.Recursive) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Recursive != false) hash ^= Recursive.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (Recursive != false) {
        output.WriteRawTag(24);
        output.WriteBool(Recursive);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Recursive != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOneRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Recursive != false) {
        Recursive = other.Recursive;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 24: {
            Recursive = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteOneResponse : pb::IMessage<DeleteOneResponse> {
    private static readonly pb::MessageParser<DeleteOneResponse> _parser = new pb::MessageParser<DeleteOneResponse>(() => new DeleteOneResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteOneResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneResponse(DeleteOneResponse other) : this() {
      affectedrows_ = other.affectedrows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteOneResponse Clone() {
      return new DeleteOneResponse(this);
    }

    /// <summary>Field number for the "affectedrows" field.</summary>
    public const int AffectedrowsFieldNumber = 1;
    private int affectedrows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Affectedrows {
      get { return affectedrows_; }
      set {
        affectedrows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteOneResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteOneResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Affectedrows != other.Affectedrows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Affectedrows != 0) hash ^= Affectedrows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Affectedrows != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Affectedrows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Affectedrows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Affectedrows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteOneResponse other) {
      if (other == null) {
        return;
      }
      if (other.Affectedrows != 0) {
        Affectedrows = other.Affectedrows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Affectedrows = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteManyRequest : pb::IMessage<DeleteManyRequest> {
    private static readonly pb::MessageParser<DeleteManyRequest> _parser = new pb::MessageParser<DeleteManyRequest>(() => new DeleteManyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteManyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteManyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteManyRequest(DeleteManyRequest other) : this() {
      collectionname_ = other.collectionname_;
      query_ = other.query_;
      recursive_ = other.recursive_;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteManyRequest Clone() {
      return new DeleteManyRequest(this);
    }

    /// <summary>Field number for the "collectionname" field.</summary>
    public const int CollectionnameFieldNumber = 1;
    private string collectionname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Collectionname {
      get { return collectionname_; }
      set {
        collectionname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private string query_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recursive" field.</summary>
    public const int RecursiveFieldNumber = 3;
    private bool recursive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Recursive {
      get { return recursive_; }
      set {
        recursive_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteManyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteManyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Collectionname != other.Collectionname) return false;
      if (Query != other.Query) return false;
      if (Recursive != other.Recursive) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Collectionname.Length != 0) hash ^= Collectionname.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Recursive != false) hash ^= Recursive.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Collectionname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Collectionname);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Query);
      }
      if (Recursive != false) {
        output.WriteRawTag(24);
        output.WriteBool(Recursive);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Collectionname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Collectionname);
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Recursive != false) {
        size += 1 + 1;
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteManyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Collectionname.Length != 0) {
        Collectionname = other.Collectionname;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Recursive != false) {
        Recursive = other.Recursive;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Collectionname = input.ReadString();
            break;
          }
          case 18: {
            Query = input.ReadString();
            break;
          }
          case 24: {
            Recursive = input.ReadBool();
            break;
          }
          case 34: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteManyResponse : pb::IMessage<DeleteManyResponse> {
    private static readonly pb::MessageParser<DeleteManyResponse> _parser = new pb::MessageParser<DeleteManyResponse>(() => new DeleteManyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteManyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Openiap.QuerysReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteManyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteManyResponse(DeleteManyResponse other) : this() {
      affectedrows_ = other.affectedrows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteManyResponse Clone() {
      return new DeleteManyResponse(this);
    }

    /// <summary>Field number for the "affectedrows" field.</summary>
    public const int AffectedrowsFieldNumber = 1;
    private int affectedrows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Affectedrows {
      get { return affectedrows_; }
      set {
        affectedrows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteManyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteManyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Affectedrows != other.Affectedrows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Affectedrows != 0) hash ^= Affectedrows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Affectedrows != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Affectedrows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Affectedrows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Affectedrows);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteManyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Affectedrows != 0) {
        Affectedrows = other.Affectedrows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Affectedrows = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
